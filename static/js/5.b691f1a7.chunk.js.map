{"version":3,"file":"static/js/5.b691f1a7.chunk.js","mappings":"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","sources":["views/pages/Dashboard.js","services/application.js","utils/TinyMce.js","views/pages/Application.js","services/user.js","services/file.js","utils/UploadImage.js","views/components/Pagination.js","services/address.js","views/pages/management/address.js","views/pages/management/userManagement.js","services/master.js","views/pages/master/LabInstrument.js","services/gas.js","views/pages/master/Gases.js","services/labware.js","views/pages/master/labWare.js","services/brand.js","views/pages/master/Brand.js","services/chemicals.js","views/pages/master/Chemicals.js","services/lifescience.js","views/pages/master/LifeScience.js","services/product.js","services/variant.js","views/pages/Product/Varient.js","views/pages/Product/Product.js","services/blogs.js","views/pages/Blog/Blogs.js","services/coupon.js","views/pages/management/Coupon.js","services/banner.js","views/pages/Banner.js","services/job.js","views/pages/Jobs/Jobs.js","services/homepageproduct.js","views/pages/HomeProduct.js","services/Offer.js","views/pages/Offer/offer.js","views/layout/route.js","views/pages/admin/Profile.js","views/pages/admin/Change-password.js","views/layout/Menu.js","views/pages/errors/Error404.js","views/layout/Layout.js"],"sourcesContent":["const App = () => {\r\n    return (\r\n        <>\r\n            <h2 style={{ textAlign: 'center' }}>Dashboard Coming Soon...</h2>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'application';\r\n\r\n    static detail(data) {\r\n\r\n        return axios.get(this.baseURL + '/details/' + data.type, { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        console.log(data)\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","import React, { useRef } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\n\r\nexport default function TinyMce(props) {\r\n    let { height = 400, menubar = false, plugins, toolbar, content_style, initialValue, onChange } = props;\r\n    if (!plugins) {\r\n        plugins = [\r\n            'advlist autolink lists link image charmap print preview anchor',\r\n            'searchreplace visualblocks code fullscreen',\r\n            'insertdatetime media table paste code help wordcount forecolor backcolor textcolor',\r\n            'image paste table code'\r\n        ];\r\n    }\r\n    if (!toolbar) {\r\n        toolbar = 'undo redo | formatselect | bold italic backcolor | forecolor emoticons'\r\n            + '| table tabledelete | tableprops tablerowprops tablecellprops'\r\n            + '| alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help | image link | imageupload | code | fullscreen';\r\n    }\r\n    if (!content_style) {\r\n        content_style = 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }';\r\n    }\r\n\r\n    const editorRef = useRef(null);\r\n    const editorContent = () => {\r\n        if (editorRef.current) {\r\n            onChange(editorRef.current.getContent())\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Editor\r\n                onInit={(evt, editor) => editorRef.current = editor}\r\n                {...{ initialValue }}\r\n                init={{\r\n                    height, menubar, plugins, toolbar, content_style,\r\n\r\n                    file_browser_callback_types: 'image',\r\n                    file_picker_callback: function (cb, value, meta) {\r\n                        const input = document.createElement(\"input\");\r\n                        input.setAttribute(\"type\", \"file\");\r\n                        input.setAttribute(\"accept\", \"image/*\");\r\n                        input.onchange = function () {\r\n                            const file = this.files[0];\r\n                            const reader = new FileReader();\r\n                            reader.readAsDataURL(file);\r\n                            reader.onload = () => { cb(reader.result, { title: file.name }); };\r\n                        };\r\n                        input.click();\r\n                    },\r\n                    deprecation_warnings: false\r\n                }}\r\n                onSelectionChange={editorContent}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Button, Form, Input, Row, Col, Spin, Tabs, Card, Typography } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport service from '../../services/application';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport TinyMce from \"../../utils/TinyMce\"\r\n\r\nexport default function Application() {\r\n\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [currentTab, setCurrentTab] = useState(0);\r\n\r\n    const handleChange = (value, changeForm) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        try {\r\n            (() => {\r\n                return currentTab === 0 ? service.save({ ...data, type: 'aboutus', data: data.data }) :\r\n                    currentTab === 1 ? service.save({ ...data, type: 'termcondition', data: data.data }) :\r\n                        currentTab === 2 ? service.save({ ...data, type: 'faq', data: data.data }) :\r\n                            currentTab === 3 ? service.save({ ...data, type: 'contactus', data: data.data }) :\r\n                                currentTab === 4 ? service.save({ ...data, type: 'privacy-policy', data: data.data }) : null\r\n\r\n            })().then(res => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                setCurrentTab((currentTab + 1) % 5);\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        } catch (err) {\r\n            AntdMsg(err.message, 'error');\r\n        }\r\n    }\r\n\r\n    const getDetails = (data) => {\r\n        setAjxRequesting(true);\r\n\r\n        service.detail(data).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentTab === 0) {\r\n            getDetails({ _id: data._id, type: \"aboutus\" });\r\n        } else if (currentTab === 1) {\r\n            getDetails({ _id: data._id, type: \"termcondition\" });\r\n        } else if (currentTab === 2) {\r\n            getDetails({ _id: data._id, type: \"faq\" });\r\n        } else if (currentTab === 3) {\r\n            getDetails({ _id: data._id, type: \"contactus\" });\r\n        } else if (currentTab === 4) {\r\n            getDetails({ _id: data._id, type: \"privacy-policy\" });\r\n        }\r\n    }, [currentTab])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\r\n                    items={[\r\n                        {\r\n                            label: \"About us\",\r\n                            key: 0,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <Aboutus {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Terms & Condition\",\r\n                            key: 1,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <TandC {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"FAQ\",\r\n                            key: 2,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <FAQ {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Contact us\",\r\n                            key: 3,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <Contactus {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Privacy Policy\",\r\n                            key: 4,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <PrivacyPolicy {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        }\r\n                    ]}\r\n                />\r\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\", paddingTop: \"5px\", paddingRight: \"70px\" }}>\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 4 ? \"Save\" : \"Next\"}</Button>\r\n                </div>\r\n            </Spin>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nconst Aboutus = ({ data }) => {\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TandC = ({ data }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst FAQ = ({ data }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Contactus = ({ data, handleChange }) => {\r\n\r\n    const [editableStr, setEditableStr] = useState('This is an editable text.');\r\n    const [a, setA] = useState([1])\r\n    const [b, setB] = useState([1])\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]} style={{ width: \"100%\", padding: \"0 5px\" }}>\r\n                    <Col span={6}>\r\n\r\n                        {a.map(() => {\r\n                            return <Form.Item label=\"Email\" required>\r\n\r\n                                <Typography.Paragraph\r\n\r\n                                    style={{ marginTop: \"8px\" }}\r\n                                    editable={{\r\n                                        onChange: setEditableStr,\r\n                                    }}\r\n                                >\r\n                                    {editableStr}\r\n                                </Typography.Paragraph>\r\n\r\n                            </Form.Item>\r\n\r\n                        })}\r\n                        <Button onClick={() => setA((pre) => {\r\n                            return [...pre, 1]\r\n                        })}>Add</Button>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        {b.map(() => {\r\n                            return <Form.Item label=\"Phone Number\" required>\r\n\r\n                                <Typography.Paragraph\r\n                                    style={{ marginTop: \"8px\" }}\r\n                                    editable={{\r\n                                        onChange: setEditableStr,\r\n                                    }}\r\n                                >\r\n                                    {editableStr}\r\n                                </Typography.Paragraph>\r\n\r\n                            </Form.Item>\r\n                        })}\r\n                        <Button onClick={() => setB((pre) => {\r\n                            return [...pre, 1]\r\n                        })}>Add</Button>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Address\" required>\r\n                            <Input placeholder=\"Street No: 9, Delhi: 110054\" value={data.data?.address} onChange={e => { handleChange({ data: { ...data.data, address: e.target.value } }) }} />\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\nconst PrivacyPolicy = ({ data }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/details-user/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/list-user', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/save-user\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/delete-user', { ids: id });\r\n    }\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'file';\r\n\r\n    static get(url) {\r\n        return axios.get(\"../\" + url);\r\n    }\r\n\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static remove(data) {\r\n        return axios.post(this.baseURL + \"/remove\", data);\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload } from \"antd\";\r\nimport ImgCrop from 'antd-img-crop';\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\n\r\nexport default function UploadImage({ fileList, setFileList, count = 1, cropImage = null, disabled = false, listType = \"picture-card\" }) {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n        })\r\n    };\r\n\r\n    if (cropImage) {\r\n        if (typeof cropImage !== typeof {}) {\r\n            cropImage = {};\r\n        }\r\n        cropImage.aspect = cropImage.aspect || 1;\r\n        cropImage.shape = cropImage.shape || 'rect';\r\n        cropImage.quality = cropImage.quality || 1;\r\n        return (\r\n            <ImgCrop rotate aspect shape={cropImage.shape} quality={cropImage.quality} >\r\n                <Upload\r\n                    accept=\"image/*\"\r\n                    customRequest={uploadImage}\r\n                    onChange={handleOnChange}\r\n                    onRemove={handleRemove}\r\n                    listType={listType}\r\n                    fileList={fileList}\r\n                    className=\"image-upload-grid\"\r\n                    disabled={disabled}\r\n                >\r\n                    {fileList?.length >= count ? null : <div>Upload</div>}\r\n                </Upload>\r\n            </ImgCrop>\r\n        );\r\n    } else {\r\n        return <Upload\r\n            accept=\"image/*\"\r\n            customRequest={uploadImage}\r\n            onChange={handleOnChange}\r\n            onRemove={handleRemove}\r\n            listType={listType}\r\n            fileList={fileList}\r\n            className=\"image-upload-grid\"\r\n            disabled={disabled}\r\n        >\r\n            {fileList?.length >= count ? null : <div>Upload</div>}\r\n        </Upload>\r\n    }\r\n\r\n};","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailJob(id, data) {\r\n        return axios.get(this.baseURL + '/address/details' + id, { params: data });\r\n    }\r\n    static listJob(data) {\r\n        return axios.get(this.baseURL + '/address/list', { params: data });\r\n    }\r\n    static saveJob(data, query) {\r\n        return axios.post(this.baseURL + '/address/save', data, { params: query });\r\n    }\r\n    static deleteJob(id) {\r\n        return axios.post(this.baseURL + '/address/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport util from '../../../utils/util';\r\nimport service from '../../../services/address';\r\n\r\n\r\nexport default function Address({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addSubNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Lable',\r\n            dataIndex: 'lable',\r\n            width: 100,\r\n            render: (v, row) => {\r\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\r\n            }\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listJob(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteJob(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !parentId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailsjob(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveJob(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e.target.value }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport UserService from '../../../services/user';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport Address from './address';\r\n\r\n\r\nexport default function UserManagement() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n    const ModelModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Job',\r\n            dataIndex: '_id',\r\n            width: 80,\r\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { ModelModalRef.current.openForm({ _id: row._id, name: row.name }) }} >Address</Button>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: status => {\r\n                if (status === \"blocked\") {\r\n                    return <Tag color='red'>Blocked</Tag>\r\n                } else if (status === \"active\") {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color=\"yellow\">Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        UserService.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        UserService.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <ModelModal ref={ModelModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select value={qData.status} allowClear placeholder=\"Search By Status\" onChange={e => { setQData({ ...qData, status: e }) }} >\r\n                            <Select.Option value=\"active\">Active</Select.Option>\r\n                            <Select.Option value=\"inactive\">Inactive</Select.Option>\r\n                            <Select.Option value=\"blocked\">Blocked</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        UserService.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        UserService.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ avatar: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={20}>\r\n                                <Row gutter={[12, 2]}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Username\" required>\r\n                                            <Input placeholder=\"John Doe\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Email\" required>\r\n                                            <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange({ email: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Phone\" required>\r\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Avatar\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value=\"active\">Active</Select.Option>\r\n                                        <Select.Option value=\"inactive\">Inactive</Select.Option>\r\n                                        <Select.Option value=\"blocked\">Blocked</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst ModelModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All Job List of <Typography.Text type=\"danger\">{data?.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <Address {...{ userId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/lab-instrument/details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/lab-instrument/list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/lab-instrument/save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/lab-instrument/delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/master';\r\nimport util from '../../../utils/util';\r\n\r\n\r\nexport default function LabInstrument({ parentId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Button',\r\n            dataIndex: 'button',\r\n            width: 100,\r\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\r\n\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unique Id',\r\n            dataIndex: 'uniqueId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <LabInstrument parentId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/gas/details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/gas/list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/gas/save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/gas/delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/gas';\r\nimport util from '../../../utils/util';\r\n\r\n\r\nexport default function Gases({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Button',\r\n            dataIndex: 'button',\r\n            width: 100,\r\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\r\n\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unique Id',\r\n            dataIndex: 'uniqueId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <Gases parentId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/labware/details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/labware/list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/labware/save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/labware/delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/labware';\r\nimport util from '../../../utils/util';\r\n\r\n\r\nexport default function LabWare({ parentId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Button',\r\n            dataIndex: 'button',\r\n            width: 100,\r\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\r\n\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unique Id',\r\n            dataIndex: 'uniqueId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <LabWare parentId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master/';\r\n\r\n\r\n\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + \"brand/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"brand/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + 'brand/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + 'brand/details/' + id);\r\n    }\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/brand';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n\r\n\r\n\r\nexport default function Brand() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        console.log('data', data);\r\n    }, [data]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master/';\r\n\r\n\r\n\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + \"chemical/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"chemical/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + 'chemical/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + 'chemical/details/' + id);\r\n    }\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/chemicals';\r\nimport util from '../../../utils/util';\r\n\r\n\r\n\r\nexport default function Chemicals({ parentId }) {\r\n\r\n    console.log(parentId)\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addSubNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Lable',\r\n            dataIndex: 'lable',\r\n            width: 100,\r\n            render: (v, row) => {\r\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\r\n            }\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !parentId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <NewForm ref={addSubNewModalRef} ></NewForm>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst NewForm = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n\r\n        openForm(dt) {\r\n            console.log(dt)\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n    console.log(data)\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={<>Data of &nbsp;<span style={{ color: 'red' }}>{data.name}</span></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n                footer={null}\r\n            >\r\n                <Chemicals parentId={data._id}></Chemicals>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master/';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + \"life-science/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"life-science/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + 'life-science/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + 'life-science/details/' + id);\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/lifescience';\r\nimport util from '../../../utils/util';\r\n\r\n\r\n\r\nexport default function Lifescience({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addSubNewModalRef = useRef();\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Lable',\r\n            dataIndex: 'lable',\r\n            width: 100,\r\n            render: (v, row) => {\r\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\r\n            }\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !parentId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <NewForm ref={addSubNewModalRef} ></NewForm>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst NewForm = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>Data of &nbsp;<span style={{ color: 'red' }}>{data.name}</span></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n                footer={null}\r\n            >\r\n                <Lifescience parentId={data._id}></Lifescience>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'ecomm/product/';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + 'list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + 'delete', { ids: id });\r\n    }\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'ecomm/variant/';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + 'list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + 'delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Input } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/variant';\r\nimport util from '../../../utils/util';\r\n\r\n\r\nexport default function Varient({ productId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', productId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        // {\r\n        //     title: 'Name',\r\n        //     dataIndex: 'name',\r\n        // },\r\n        // {\r\n        //     title: 'Varient',\r\n        //     dataIndex: 'varient',\r\n        //     width: 100,\r\n        //     render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Varient</Button> },\r\n\r\n        // },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'cateId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Color',\r\n            dataIndex: 'color',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Inventory',\r\n            dataIndex: 'inventory',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Strile',\r\n            dataIndex: 'strile',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Total',\r\n            dataIndex: 'total',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unit',\r\n            dataIndex: 'unite',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Volume',\r\n            dataIndex: 'volume',\r\n            width: 100,\r\n        },\r\n        // {\r\n        //     title: 'Status',\r\n        //     dataIndex: 'status',\r\n        //     width: 80,\r\n        //     render: isActive => {\r\n        //         if (isActive) {\r\n        //             return <Tag color='green'>Active</Tag>\r\n        //         } else {\r\n        //             return <Tag color='red'>Inactive</Tag>\r\n        //         }\r\n        //     },\r\n        // },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!productId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Varient</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, productId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, productId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { productId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Varient'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Category\" required>\r\n                                    <Input placeholder=\"cateId\" value={data.cateId} onChange={e => { handleChange({ cateId: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Color\" required>\r\n                                    <Input placeholder=\"color\" value={data.color} onChange={e => { handleChange({ color: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Inventory\" required>\r\n                                    <Input placeholder=\"inventory\" value={data.inventory} onChange={e => { handleChange({ inventory: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Strile\" required>\r\n                                    <Input placeholder=\"strile\" value={data.strile} onChange={e => { handleChange({ strile: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Total\" required>\r\n                                    <Input placeholder=\"total\" value={data.total} onChange={e => { handleChange({ total: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Meta-Description\" required>\r\n                                    <Input placeholder=\"Meta-Description\" value={data.metaDescription} onChange={e => { handleChange({ metaDescription: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Unit\" required>\r\n                                    <Input placeholder=\"unite\" value={data.unite} onChange={e => { handleChange({ unite: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Volume\" required>\r\n                                    <Input placeholder=\"volume\" value={data.volume} onChange={e => { handleChange({ volume: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add User' : 'List of Varient')}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                // onOk={save}\r\n                // okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            // footer={[\r\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n            // ]}\r\n            >\r\n                <Varient productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, Divider } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/product';\r\nimport serviceBrand from '../../../services/brand';\r\nimport serviceChemical from '../../../services/chemicals';\r\nimport serviceGases from '../../../services/gas';\r\nimport serviceLabware from '../../../services/labware';\r\nimport serviceLifescience from '../../../services/lifescience';\r\nimport serviceLabinstrument from '../../../services/master';\r\nimport util from '../../../utils/util';\r\nimport Varient from './Varient';\r\nimport UploadImage from '../../../utils/UploadImage';\r\n\r\n\r\n\r\nexport default function Product({ parentId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [brands, setBrands] = useState([]);\r\n    const [chemicals, setChemicals] = useState([]);\r\n    const [gases, setGases] = useState([]);\r\n    const [labware, setLabware] = useState([]);\r\n    const [lifescience, setLifescience] = useState([]);\r\n    const [labinstrument, setLabinstrument] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Variant',\r\n            dataIndex: 'varient',\r\n            width: 100,\r\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Variant</Button> },\r\n\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Starting Price',\r\n            dataIndex: 'startingPrice',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Meta-Title',\r\n            dataIndex: 'metaTitle',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Meta-Tag',\r\n            dataIndex: 'metaTag',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Meta-Description',\r\n            dataIndex: 'metaDescription',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n        serviceBrand.list({ isAll: 1 }).then(res => {\r\n            setBrands(res.data.map(v => ({ label: v.name, value: v._id })));\r\n        })\r\n        serviceChemical.list({ isAll: 1 }).then(res => {\r\n            setChemicals(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n        })\r\n        serviceGases.listUser({ isAll: 1 }).then(res => {\r\n            setGases(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n        })\r\n        serviceLabware.listUser({ isAll: 1 }).then(res => {\r\n            setLabware(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n        })\r\n        serviceLabinstrument.listUser({ isAll: 1 }).then(res => {\r\n            setLabinstrument(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n        })\r\n        serviceLifescience.list({ isAll: 1 }).then(res => {\r\n            setLifescience(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n        })\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>Product List</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId, brands, chemicals, gases, labware, labinstrument, lifescience }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId, brands, chemicals, gases, labware, labinstrument, lifescience } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [thumbFile, setThumbFile] = useState([]);\r\n    const [file, setFile] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFile(res.data.imgs.length ? [...res.data.imgs] : [])\r\n            setThumbFile(res.data.thumbImg ? [res.data.thumbImg] : [])\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data?.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, thumbImg: thumbFile[0] })\r\n    }, [thumbFile])\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, imgs: file })\r\n    }, [file])\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({})\r\n        }\r\n    }, [open])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add New' : 'Edit') + ' Product'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1000}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Brand\" required>\r\n                                    <Select\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                        placeholder=\"Select Brand\"\r\n                                        onChange={v => { handleChange({ brandId: v }) }}\r\n                                        value={data.brandId}\r\n                                        optionLabelProp=\"label\"\r\n                                        allowClear={true}\r\n                                        options={brands || []}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\">Chemicals</Divider>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Choose Chemicals\" required>\r\n                                    <Select\r\n                                        mode=\"multiple\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                        placeholder=\"Select Chemicals\"\r\n                                        onChange={v => { setData({ ...data, chemicalIds: [v] }) }}\r\n                                        value={data.chemicalIds?.[0]}\r\n                                        optionLabelProp=\"label\"\r\n                                        allowClear={true}\r\n                                        options={chemicals.filter(v => !v.parentId) || []}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {\r\n                                data?.chemicalIds?.map((v, i) => (\r\n                                    chemicals?.find(ch => v?.includes(ch?.parentId))\r\n                                        ? <Col span={12} key={v}>\r\n                                            <Form.Item label=\"Choose Chemical\" required>\r\n                                                <Select\r\n                                                    mode=\"multiple\"\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                    }}\r\n                                                    placeholder=\"Select Categories\"\r\n                                                    onChange={v => {\r\n                                                        if (v) {\r\n                                                            setData({ ...data, chemicalIds: [...data.chemicalIds.slice(0, i + 1), v] });\r\n                                                        }\r\n                                                    }}\r\n                                                    value={data.chemicalIds?.[i + 1]}\r\n                                                    optionLabelProp=\"label\"\r\n                                                    options={chemicals.filter(ch => v?.includes(ch.parentId)) || []}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        : null\r\n                                ))\r\n                            }\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\">Gases</Divider>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Choose Gases\" required>\r\n                                    <Select\r\n                                        mode=\"multiple\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                        placeholder=\"Select Gases\"\r\n                                        onChange={v => { setData({ ...data, gasIds: [v] }) }}\r\n                                        value={data.gasIds?.[0]}\r\n                                        optionLabelProp=\"label\"\r\n                                        allowClear={true}\r\n                                        options={gases.filter(v => !v.parentId) || []}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {\r\n                                data?.gasIds?.map((v, i) => (\r\n                                    gases?.find(gs => v?.includes(gs?.parentId))\r\n                                        ? <Col span={12} key={v}>\r\n                                            <Form.Item label=\"Choose Gases\" required>\r\n                                                <Select\r\n                                                    mode=\"multiple\"\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                    }}\r\n                                                    placeholder=\"Select Categories\"\r\n                                                    onChange={v => {\r\n                                                        if (v) {\r\n                                                            setData({ ...data, gasIds: [...data.gasIds.slice(0, i + 1), v] });\r\n                                                        }\r\n                                                    }}\r\n                                                    value={data.gasIds?.[i + 1]}\r\n                                                    optionLabelProp=\"label\"\r\n                                                    options={gases.filter(gs => v?.includes(gs.parentId)) || []}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        : null\r\n                                ))\r\n                            }\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\">Labware</Divider>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Choose Labware\" required>\r\n                                    <Select\r\n                                        mode=\"multiple\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                        placeholder=\"Select Labware\"\r\n                                        onChange={v => { setData({ ...data, labwareIds: [v] }) }}\r\n                                        value={data.labwareIds?.[0]}\r\n                                        optionLabelProp=\"label\"\r\n                                        allowClear={true}\r\n                                        options={labware.filter(v => !v.parentId) || []}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {\r\n                                data?.labwareIds?.map((v, i) => (\r\n                                    labware?.find(gs => v?.includes(gs?.parentId))\r\n                                        ? <Col span={12} key={v}>\r\n                                            <Form.Item label=\"Choose Labware\" required>\r\n                                                <Select\r\n                                                    mode=\"multiple\"\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                    }}\r\n                                                    placeholder=\"Select Categories\"\r\n                                                    onChange={v => {\r\n                                                        if (v) {\r\n                                                            setData({ ...data, labwareIds: [...data.labwareIds.slice(0, i + 1), v] });\r\n                                                        }\r\n                                                    }}\r\n                                                    value={data.labwareIds?.[i + 1]}\r\n                                                    optionLabelProp=\"label\"\r\n                                                    options={labware.filter(gs => v?.includes(gs.parentId)) || []}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        : null\r\n                                ))\r\n                            }\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\">Lab-Instrument</Divider>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Choose Lab-Instrument\" required>\r\n                                    <Select\r\n                                        mode=\"multiple\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                        placeholder=\"Select Lab-Instrument\"\r\n                                        onChange={v => { setData({ ...data, labInstrumentIds: [v] }) }}\r\n                                        value={data.labInstrumentIds?.[0]}\r\n                                        optionLabelProp=\"label\"\r\n                                        allowClear={true}\r\n                                        options={labinstrument.filter(v => !v.parentId) || []}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {\r\n                                data?.labInstrumentIds?.map((v, i) => (\r\n                                    labinstrument?.find(gs => v?.includes(gs?.parentId))\r\n                                        ? <Col span={12} key={v}>\r\n                                            <Form.Item label=\"Choose Lab-Instrument\" required>\r\n                                                <Select\r\n                                                    mode=\"multiple\"\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                    }}\r\n                                                    placeholder=\"Select Categories\"\r\n                                                    onChange={v => {\r\n                                                        if (v) {\r\n                                                            setData({ ...data, labInstrumentIds: [...data.labInstrumentIds.slice(0, i + 1), v] });\r\n                                                        }\r\n                                                    }}\r\n                                                    value={data.labInstrumentIds?.[i + 1]}\r\n                                                    optionLabelProp=\"label\"\r\n                                                    options={labinstrument.filter(gs => v?.includes(gs.parentId)) || []}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        : null\r\n                                ))\r\n                            }\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\">Life-Science</Divider>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Choose Life-Science\" required>\r\n                                    <Select\r\n                                        mode=\"multiple\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                        placeholder=\"Select Life-Science\"\r\n                                        onChange={v => { setData({ ...data, lifeScienceIds: [v] }) }}\r\n                                        value={data.lifeScienceIds?.[0]}\r\n                                        optionLabelProp=\"label\"\r\n                                        allowClear={true}\r\n                                        options={lifescience.filter(v => !v.parentId) || []}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {\r\n                                data?.lifeScienceIds?.map((v, i) => (\r\n                                    lifescience?.find(gs => v?.includes(gs?.parentId))\r\n                                        ? <Col span={12} key={v}>\r\n                                            <Form.Item label=\"Choose Life-Science\" required>\r\n                                                <Select\r\n                                                    mode=\"multiple\"\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                    }}\r\n                                                    placeholder=\"Select Categories\"\r\n                                                    onChange={v => {\r\n                                                        if (v) {\r\n                                                            setData({ ...data, lifeScienceIds: [...data.lifeScienceIds.slice(0, i + 1), v] });\r\n                                                        }\r\n                                                    }}\r\n                                                    value={data.lifeScienceIds?.[i + 1]}\r\n                                                    optionLabelProp=\"label\"\r\n                                                    options={lifescience.filter(gs => v?.includes(gs.parentId)) || []}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        : null\r\n                                ))\r\n                            }\r\n                            <Col span={24}>\r\n                                <Divider />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Starting Price\" required>\r\n                                    <Input placeholder=\"Starting Price\" value={data.startingPrice} onChange={e => { handleChange({ startingPrice: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <Input placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Meta-Title\" required>\r\n                                    <Input placeholder=\"Meta-Title\" value={data.metaTitle} onChange={e => { handleChange({ metaTitle: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Meta-Tag\" required>\r\n                                    <Input placeholder=\"Meta-Tag\" value={data.metaTag} onChange={e => { handleChange({ metaTag: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Meta-Description\" required>\r\n                                    <Input placeholder=\"Meta-Description\" value={data.metaDescription} onChange={e => { handleChange({ metaDescription: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Thumbnail Photo\">\r\n                                    <UploadImage {...{ fileList: thumbFile, setFileList: setThumbFile }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList: file, setFileList: setFile, count: 20 }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? `Add User  of ${(data.name)}` : `Variants of ${(data.name)}`)}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n\r\n            >\r\n                <Varient productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    static list(data) {\r\n        return axios.get(\"blog/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(\"blog/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post('blog/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get('blog/details/' + id);\r\n    }\r\n\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/blogs';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport util from '../../../utils/util';\r\n\r\n\r\n\r\nexport default function Blogs() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n            width: 250,\r\n            render: v => <Typography.Text ellipsis={{ expandable: true }}>{v}</Typography.Text>\r\n        },\r\n\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n            render: v => <Typography.Text ellipsis={{ expandable: true }}>{v}</Typography.Text>\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 250,\r\n            render: v => <Typography.Text ellipsis={{ expandable: true }}>{v}</Typography.Text>\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this blog?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        // service.list().then((res)=>{\r\n        //     console.log(res)\r\n        // })\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Blogs</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log(11, dt);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n            if (dt) {\r\n                setFileList(dt?.img ? [dt?.img] : []);\r\n            } else {\r\n                setFileList([]);\r\n            }\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, img: fileList?.[0] })\r\n    }, [fileList]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data?.title) })\r\n        }\r\n    }, [data.title])\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Blog'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1400}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <UploadImage {...{ fileList, setFileList, count: 1 }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={18}>\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Form.Item label=\"Title\" required>\r\n                                            <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item label=\"Slug\" required>\r\n                                            <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e?.target?.value) }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <Input.TextArea rows={6} placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'coupon';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + '/details/' + id);\r\n    }\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, DatePicker } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/coupon';\r\nimport ProductService from '../../../services/product';\r\nimport UserService from '../../../services/user';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport moment from 'moment'\r\nimport dayjs from 'dayjs';\r\n\r\n\r\n\r\nexport default function Coupon() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const [product, setProduct] = useState([]);\r\n    const [user, setUser] = useState([]);\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n\r\n        },\r\n\r\n        {\r\n            title: 'Discount Value',\r\n            dataIndex: 'discountValue',\r\n        },\r\n        {\r\n            title: 'Start Date',\r\n            dataIndex: 'startDate',\r\n            width: 150,\r\n            render: (v) => <span>{moment(v).format('DD MMM YYYY')}</span> \r\n        },\r\n        {\r\n            title: 'End Date',\r\n            dataIndex: 'endDate',\r\n            width: 150,\r\n            render: (v) => <span>{moment(v).format('DD MMM YYYY')}</span> \r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listProduct() {\r\n        ProductService.listUser()\r\n        .then(res => { setProduct(res.data || []); }).catch(err => { AntdMsg('Product data not loaded', 'error'); });\r\n    }\r\n    function listUser() {\r\n        UserService.listUser()\r\n        .then(res => { setUser(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n        listProduct()\r\n        listUser()\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list,product,user }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list,product,user } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n            // setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } \r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        console.log('data', data);\r\n    }, [data]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Coupon'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Discount Value\" required>\r\n                                    <Input placeholder=\"Discount Amount\" value={data.discountValue} onChange={e => { handleChange({ discountValue: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Max Discount Value\" required>\r\n                                    <Input placeholder=\"Max Discount Amount\" value={data.maxDiscountValue} onChange={e => { handleChange({ maxDiscountValue: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Minimun Order Value\" required>\r\n                                    <Input placeholder=\" Minimun Order Amount\" value={data.minimunOrderPrice} onChange={e => { handleChange({ minimunOrderPrice: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Discount Type\" required>\r\n                                    <Select value={data.discountType} onChange={e => { handleChange({ discountType: e }) }} >\r\n                                        <Select.Option value={'percent'}>Percent</Select.Option>\r\n                                        <Select.Option value={'flat'}>Flat</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Start Date\" required>\r\n\r\n                                    <DatePicker.RangePicker\r\n                                    style={{ width: '100%' }}\r\n                                    value={[dayjs(moment(data.startDate).format('YYYY-MM-DD'), 'YYYY-MM-DD'),\r\n                                    dayjs(moment(data.endDate).format('YYYY-MM-DD'), 'YYYY-MM-DD')]}\r\n                                    onChange={v => handleChange({ startDate: new Date(v[0]), endDate: new Date(v[1]) })} allowClear\r\n                                />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Product\" required>\r\n                                    <Select value={data.productIds} onChange={v => { handleChange({productIds:v}) }} \r\n                                    options={\r\n                                        product.map(v => (\r\n                                            {\r\n                                                value: v._id,\r\n                                                label: v.name,\r\n                                              }\r\n                                        ))\r\n                                    } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"User\" required>\r\n                                    <Select value={data.userIds} onChange={v => { handleChange({userIds:v}) }} \r\n                                    options={\r\n                                        user.map(v => (\r\n                                            {\r\n                                                value: v._id,\r\n                                                label: v.name,\r\n                                              }\r\n                                        ))\r\n                                    } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Description\">\r\n                                    <Input.TextArea placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Term Conditions\">\r\n                                    <Input.TextArea placeholder=\"Term Condition\" value={data.termCondition} onChange={e => { handleChange({ termCondition: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'banner';\r\n\r\n    // for Banners : \r\n    static bannerDetails(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static bannerList(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static bannerSave(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static bannerDelete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport service from '../../services/banner';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport UploadImage from '../../utils/UploadImage';\r\n\r\n\r\nexport default function Banner() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Image',\r\n            dataIndex: 'imgUrl',\r\n            render: (v) => {\r\n                return <Image src={v?.url} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Uploaded At',\r\n            dataIndex: 'createdAt',\r\n            width: 400,\r\n            render: (v) => {\r\n                return moment(v).format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\r\n            }\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'type',\r\n            width: 80,\r\n            render: (_, row) => {\r\n                return (<span>{row.type}</span>)\r\n            }\r\n\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this image?. Be sure to delete the image from server.\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.bannerList(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.bannerDelete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Banners</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        {/* <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear /> */}\r\n                    </Form.Item>\r\n                </Col>\r\n                {/* <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col> */}\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.bannerDetails(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.imgUrl ? [res.data?.imgUrl] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n            setAjxRequesting(true);\r\n            service.bannerSave(data).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                list();\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ imgUrl: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Banner'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} listType=\"picture\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Priority\">\r\n                                    <Input placeholder='Priority' value={data.priority} onChange={e => { handleChange({ priority: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Type\" required>\r\n                                    <Select value={data.type} onChange={v => { handleChange({ type: v }) }} >\r\n                                        <Select.Option value=\"home\">Home</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'job';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/job';\r\nimport util from '../../../utils/util';\r\n\r\n\r\nexport default function Jobs({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Designation',\r\n            dataIndex: 'name',\r\n        },\r\n        // {\r\n        //     title: 'Button',\r\n        //     dataIndex: 'button',\r\n        //     width: 100,\r\n        //     render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\r\n\r\n        // },\r\n        {\r\n            title: 'Skill',\r\n            dataIndex: 'skill',\r\n            // width: 100,\r\n        },\r\n        {\r\n            title: 'Location',\r\n            dataIndex: 'location',\r\n            // width: 100,\r\n        },\r\n        {\r\n            title: 'Experience',\r\n            dataIndex: 'experience',\r\n            // width: 100,\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n            // width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Open</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Close</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={16}>\r\n                                <Form.Item label=\"Designation\" required>\r\n                                    <Input placeholder=\"Designation\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Skill\" required>\r\n                                    <Input placeholder=\"Skill\" value={data.skill} onChange={e => { handleChange({ skill: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Location\" required>\r\n                                    <Input placeholder=\"Location\" value={data.location} onChange={e => { handleChange({ location: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Experience\" required>\r\n                                    <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <Input.TextArea placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Open</Select.Option>\r\n                                        <Select.Option value={false}>Close</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Opportunity'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                // onOk={save}\r\n                // okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            // footer={[\r\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n            // ]}\r\n            >\r\n                {/* <Gases parentId={data._id} /> */}\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'home-page-product';\r\n\r\n\r\n\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + \"/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + '/details/' + id);\r\n    }\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport service from '../../services/homepageproduct';\r\nimport serviceProduct from '../../services/product';\r\n\r\n\r\nexport default function Product() {\r\n\r\n\tconst [data, setData] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [selected, setSelected] = useState([]);\r\n\tconst [qData, setQData] = useState({ page: 1, limit: 20 });\r\n\tconst addNewModalRef = useRef();\r\n\tconst [allProduct, setAllProduct] = useState([])\r\n\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: '#',\r\n\t\t\twidth: 40,\r\n\t\t\trender: (v, row, i) => <b>{i + 1}</b>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Row',\r\n\t\t\tdataIndex: 'row',\r\n\t\t\twidth: 50,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Products',\r\n\t\t\tdataIndex: 'productDetails',\r\n\t\t\trender: (v) => v.map(vv => <Tag>{vv.name}</Tag>)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Action',\r\n\t\t\tdataIndex: '_id',\r\n\t\t\twidth: 70,\r\n\t\t\trender: (v, row) => {\r\n\t\t\t\treturn <>\r\n\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\ttitle=\"Are you sure to delete this data?\"\r\n\t\t\t\t\t\tonConfirm={() => { deleteData(row._id); }}\r\n\t\t\t\t\t\tokText=\"Yes\"\r\n\t\t\t\t\t\tcancelText=\"No\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t<Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t},\r\n\t].filter(item => !item.hidden);\r\n\tfunction list() {\r\n\t\tsetLoading(true);\r\n\t\tservice.list(qData).then(res => {\r\n\t\t\tsetData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n\t\t\tsetQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n\t\t}).catch(err => { }).finally(() => {\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tlist();\r\n\t}, [])\r\n\tconst deleteData = (id) => {\r\n\t\tservice.delete(id).then(res => {\r\n\t\t\tAntdMsg(res.message);\r\n\t\t\tlist();\r\n\t\t\tsetSelected([]);\r\n\t\t}).catch(err => {\r\n\t\t\tAntdMsg(err.message, 'error');\r\n\t\t})\r\n\t}\r\n\tconst tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\ttableColumns[0].fixed = true;\r\n\ttableColumns[tableColumns.length - 1].fixed = 'right';\r\n\tconst tableProps = {\r\n\t\tbordered: true,\r\n\t\tloading,\r\n\t\tsize: 'small',\r\n\t\ttitle: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n\t\tshowHeader: true,\r\n\t\tfooter: () => <Pagination {...{ qData, setQData }} />,\r\n\t\trowSelection: {\r\n\t\t\tonChange: (selectedRowKeys) => {\r\n\t\t\t\tsetSelected(selectedRowKeys);\r\n\t\t\t},\r\n\t\t},\r\n\t\ttableLayout: undefined,\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tserviceProduct.listUser({ isAll: 1 }).then((res) => {\r\n\t\t\tsetAllProduct(res.data.map(v => ({ ...v, label: v.name, value: v._id })))\r\n\t\t})\r\n\t}, [qData.page, qData.limit]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Typography.Title level={5} style={{ marginTop: 0 }}>Product List</Typography.Title>\r\n\t\t\t<Table\r\n\t\t\t\t{...tableProps}\r\n\t\t\t\tpagination={{ position: ['none'], pageSize: qData.limit }}\r\n\t\t\t\tcolumns={tableColumns}\r\n\t\t\t\tdataSource={data.length ? data : []}\r\n\t\t\t\tscroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n\t\t\t/>\r\n\t\t\t<AddForm ref={addNewModalRef} {...{ list, allProduct }} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\treturn (\r\n\t\t<Form onSubmitCapture={list} className=\"search-form\">\r\n\t\t\t<Row gutter={[12, 2]}>\r\n\t\t\t\t<Col span={4}>\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t<Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={3}>\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={5}>\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n\t\t\t\t\t\t<Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tselected.length\r\n\t\t\t\t\t\t\t? <Popconfirm\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure to delete these selected data ?\"\r\n\t\t\t\t\t\t\t\tonConfirm={() => { deleteData(selected); }}\r\n\t\t\t\t\t\t\t\tokText=\"Yes\"\r\n\t\t\t\t\t\t\t\tcancelText=\"No\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n\tconst { list, allProduct } = props;\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [data, setData] = useState({ aspect: 1 });\r\n\tconst [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\tconst handleChange = (value) => {\r\n\t\tsetData({ ...data, ...value });\r\n\t}\r\n\tuseImperativeHandle(ref, () => ({\r\n\t\topenForm(dt) {\r\n\t\t\tsetOpen(true);\r\n\t\t\tsetData(\r\n\t\t\t\tdt\r\n\t\t\t\t\t? { ...dt }\r\n\t\t\t\t\t: {}\r\n\t\t\t);\r\n\t\t}\r\n\t}));\r\n\r\n\tconst save = () => {\r\n\t\tsetAjxRequesting(true);\r\n\t\tservice.save(data).then((res) => {\r\n\t\t\tAntdMsg(res.message);\r\n\t\t\thandleChange({ ...res.data });\r\n\t\t\tlist();\r\n\t\t\tsetOpen(false);\r\n\t\t}).catch(err => {\r\n\t\t\tif (typeof err.message === 'object') {\r\n\t\t\t\tlet dt = err.message[Object.keys(err.message)[0]];\r\n\t\t\t\tAntdMsg(dt, 'error');\r\n\t\t\t} else {\r\n\t\t\t\tAntdMsg(err.message, 'error');\r\n\t\t\t}\r\n\t\t}).finally(() => {\r\n\t\t\tsetAjxRequesting(false);\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!open) {\r\n\t\t\tsetData({})\r\n\t\t}\r\n\t}, [open]);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={(!data._id ? 'Add New' : 'Edit') + ' Product'}\r\n\t\t\t\tstyle={{ top: 20 }}\r\n\t\t\t\topen={open}\r\n\t\t\t\tokText=\"Save\"\r\n\t\t\t\tonOk={save}\r\n\t\t\t\tokButtonProps={{ disabled: ajxRequesting }}\r\n\t\t\t\tonCancel={() => { setOpen(false); }}\r\n\t\t\t\tdestroyOnClose\r\n\t\t\t\tmaskClosable={false}\r\n\t\t\t\twidth={1000}\r\n\t\t\t\tclassName=\"app-modal-body\"\r\n\t\t\t\tfooter={[\r\n\t\t\t\t\t<Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n\t\t\t\t\t<Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n\t\t\t\t\t<Form layout=\"vertical\">\r\n\t\t\t\t\t\t<Row gutter={[12, 2]}>\r\n\t\t\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t\t\t<Form.Item label=\"Row Number\" required>\r\n\t\t\t\t\t\t\t\t\t<Input type='number' min={1} max={5} placeholder=\"Row Number..\" value={data.row} onChange={e => { handleChange({ row: e.target.value }) }} />\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t{/* <Col span={6}>\r\n\t\t\t\t\t\t\t\t<Form.Item label=\"Choose Type\" required>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Type...\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={v => { handleChange({ type: v, }) }}\r\n\t\t\t\t\t\t\t\t\t\tvalue={data.type}\r\n\t\t\t\t\t\t\t\t\t\toptionLabelProp=\"label\"\r\n\t\t\t\t\t\t\t\t\t\tallowClear={true}\r\n\t\t\t\t\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'chemical',\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Chemical'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'life-science',\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Life Science'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'lab-instrument',\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Lab Instruments'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'lab-ware',\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Lab Ware'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'gas',\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Gases'\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</Col> */}\r\n\t\t\t\t\t\t\t<Col span={24}>\r\n\t\t\t\t\t\t\t\t<Form.Item label=\"Choose Product\" required>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Choose Products\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={v => { handleChange({ productIds: v }) }}\r\n\t\t\t\t\t\t\t\t\t\toptionLabelProp=\"label\"\r\n\t\t\t\t\t\t\t\t\t\tallowClear={true}\r\n\t\t\t\t\t\t\t\t\t\tvalue={data.productIds}\r\n\t\t\t\t\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\t\t\t\t\tallProduct.filter(v => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Spin>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'offer';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + '/details/' + id);\r\n    }\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/Offer';\r\nimport ProductService from '../../../services/product';\r\nimport UserService from '../../../services/user';\r\nimport Pagination from '../../components/Pagination';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n\r\n\r\nexport default function Offer() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const [product, setProduct] = useState([]);\r\n    const [user, setUser] = useState([]);\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n\r\n        },\r\n\r\n        {\r\n            title: 'Discount Value',\r\n            dataIndex: 'discountValue',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listProduct() {\r\n        ProductService.listUser()\r\n            .then(res => { setProduct(res.data || []); }).catch(err => { AntdMsg('Product data not loaded', 'error'); });\r\n    }\r\n    function listUser() {\r\n        UserService.listUser()\r\n            .then(res => { setUser(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n        listProduct()\r\n        listUser()\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, product, user }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, product, user } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [file, setFile] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFile(res.data.imgs.length ? [...res.data.imgs] : [])\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } \r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        console.log('data', data);\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, imgs: file })\r\n    }, [file])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Offer'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Discount Value\" required>\r\n                                    <Input placeholder=\"Discount Amount\" value={data.discountValue} onChange={e => { handleChange({ discountValue: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Max Discount Value\" required>\r\n                                    <Input placeholder=\"Max Discount Amount\" value={data.maxDiscountValue} onChange={e => { handleChange({ maxDiscountValue: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Minimun Order Value\" required>\r\n                                    <Input placeholder=\" Minimun Order Amount\" value={data.minimunOrderPrice} onChange={e => { handleChange({ minimunOrderPrice: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Discount Type\" required>\r\n                                    <Select value={data.discountType} onChange={e => { handleChange({ discountType: e }) }} >\r\n                                        <Select.Option value={'percent'}>Percent</Select.Option>\r\n                                        <Select.Option value={'flat'}>Flat</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Valid-Till\" required>\r\n\r\n                                    <DatePicker.RangePicker\r\n                                    style={{ width: '100%' }}\r\n                                    value={[dayjs(moment(data.startDate).format('YYYY-MM-DD'), 'YYYY-MM-DD'),\r\n                                    dayjs(moment(data.endDate).format('YYYY-MM-DD'), 'YYYY-MM-DD')]}\r\n                                    onChange={v => handleChange({ startDate: new Date(v[0]), endDate: new Date(v[1]) })} allowClear\r\n                                />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Product\" required>\r\n                                    <Select mode=\"multiple\" value={data.productIds} onChange={v => { handleChange({ productIds: v }) }}\r\n                                        options={\r\n                                            product.map(v => (\r\n                                                {\r\n                                                    value: v._id,\r\n                                                    label: v.name,\r\n                                                }\r\n                                            ))\r\n                                        } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"User\" required>\r\n                                    <Select value={data.userIds} onChange={v => { handleChange({ userIds: v }) }}\r\n                                        options={\r\n                                            user.map(v => (\r\n                                                {\r\n                                                    value: v._id,\r\n                                                    label: v.name,\r\n                                                }\r\n                                            ))\r\n                                        } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Description\">\r\n                                    <Input.TextArea placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Term Conditions\">\r\n                                    <Input.TextArea placeholder=\"Term Condition\" value={data.termCondition} onChange={e => { handleChange({ termCondition: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={20}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList: file, setFileList: setFile, count: 20 }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import { DashboardOutlined, BankOutlined, ApartmentOutlined, CalendarOutlined } from '@ant-design/icons';\r\n\r\nimport Dashboard from '../pages/Dashboard';\r\nimport Application from \"../pages/Application\"\r\nimport UserManagement from '../pages/management/userManagement';\r\nimport Profile from '../pages/admin/Profile';\r\nimport ChangePassword from '../pages/admin/Change-password';\r\nimport LabInstrument from '../pages/master/LabInstrument';\r\nimport Gases from '../pages/master/Gases';\r\nimport LabWare from '../pages/master/labWare';\r\nimport Brand from '../pages/master/Brand';\r\nimport Chemicles from '../pages/master/Chemicals';\r\nimport LifeScience from '../pages/master/LifeScience';\r\nimport Product from '../pages/Product/Product';\r\nimport Blogs from '../pages/Blog/Blogs';\r\nimport Coupon from '../pages/management/Coupon';\r\nimport Banner from '../pages/Banner';\r\nimport Jobs from '../pages/Jobs/Jobs';\r\nimport HomeProduct from '../pages/HomeProduct';\r\nimport Offer from '../pages/Offer/offer';\r\n\r\n\r\nconst routes = [\r\n    {\r\n        title: 'Career', icon: BankOutlined, url: '/career', children: [\r\n            { title: 'Job', icon: ApartmentOutlined, url: '/', component: Jobs },\r\n            { title: 'Job Application', icon: ApartmentOutlined, url: '/jobs', component: Jobs },\r\n        ]\r\n    },\r\n    { title: 'Add New Product', icon: BankOutlined, url: '/product', component: Product },\r\n    { title: 'Dashboard', icon: DashboardOutlined, url: '/', component: Dashboard },\r\n    { title: 'Blog', icon: DashboardOutlined, url: '/blogs', component: Blogs },\r\n    { title: 'Banner', icon: ApartmentOutlined, url: '/banner', component: Banner },\r\n\r\n    {\r\n        title: 'Master', icon: BankOutlined, url: '/master-new', children: [\r\n            { title: 'Brand', icon: ApartmentOutlined, url: '/', component: Brand },\r\n            { title: 'Chemicals', icon: ApartmentOutlined, url: '/chemicals', component: Chemicles },\r\n            { title: 'Life-Science', icon: ApartmentOutlined, url: '/lifescience', component: LifeScience },\r\n            { title: 'Lab Instrument', icon: ApartmentOutlined, url: '/lab-instrument', component: LabInstrument },\r\n            { title: 'Lab Ware', icon: ApartmentOutlined, url: '/lab-ware', component: LabWare },\r\n            { title: 'Gases', icon: ApartmentOutlined, url: '/gases', component: Gases },\r\n        ]\r\n    },\r\n    {\r\n        title: 'Management', icon: BankOutlined, url: '/management', children: [\r\n            { title: 'User', icon: ApartmentOutlined, url: '/', component: UserManagement },\r\n            { title: 'Coupon', icon: ApartmentOutlined, url: '/coupon', component: Coupon },\r\n        ]\r\n    },\r\n    { title: 'Application', icon: CalendarOutlined, url: '/application', component: Application },\r\n    { title: 'Offer', icon: DashboardOutlined, url: '/offer', component: Offer },\r\n    {\r\n        title: 'You', icon: ApartmentOutlined, url: '/profile', children: [\r\n            { title: 'Profile', icon: ApartmentOutlined, url: '/', component: Profile },\r\n            { title: 'Change Password', icon: ApartmentOutlined, url: '/change-password', component: ChangePassword },\r\n        ]\r\n    },\r\n    {\r\n        title: 'Home Page', icon: BankOutlined, url: '/product-new', children: [\r\n            { title: 'Product', icon: ApartmentOutlined, url: '/', component: HomeProduct },\r\n\r\n        ]\r\n    },\r\n].filter(v => (!v.hidden) || v.children?.length);\r\n\r\nexport default routes;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Form, Spin, Row, Col, Typography, Divider, Switch } from 'antd';\r\nimport { PageHeader } from '@ant-design/pro-layout'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport greetingTime from 'greeting-time';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport service from '../../../services/admin';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport UploadImage from '../../../utils/UploadImage';\r\n\r\nexport default function Profile() {\r\n\r\n    const [data, setData] = useState({});\r\n    const [fileList, setFileList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [doSave, setDoSave] = useState(false);\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.profile().then(res => {\r\n            setData(res.data.result || {});\r\n            if (res.data.result?.avatar) {\r\n                setFileList([res.data.result?.avatar]);\r\n            }\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateProfile();\r\n    }, [data]);\r\n\r\n    function updateProfile() {\r\n        if (doSave) {\r\n            setLoading(true);\r\n            service.saveProfile(data).then(res => {\r\n                AntdMsg(res.message);\r\n            }).catch(err => {\r\n                AntdMsg(err.message, 'error');\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleChange(fileList?.[0], 'avatar');\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <PageHeader\r\n                    title={greetingTime(new Date()) + ', ' + data?.name}\r\n                    extra={[<Switch key={'do-save'} checkedChildren=\"Update\" unCheckedChildren=\"Update\" checked={doSave} onChange={v => { setDoSave(v) }} />]}\r\n                />\r\n                <Divider />\r\n                <Form layout=\"vertical\">\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={16}>\r\n                            <Row gutter={[12, 10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'name'); } }} level={5} >\r\n                                            {data.name}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">User Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'userName'); } }} level={5} >\r\n                                            {data.userName}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Email</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'email'); } }} level={5} >\r\n                                            {data.email}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Phone Number</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'phone'); } }} level={5} >\r\n                                            {data.phone}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <UploadImage {...{ fileList, setFileList }} disabled={!doSave} cropImage />\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Spin>\r\n        </>\r\n    );\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Form, Spin, Row, Col, Divider, Input, Button } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport greetingTime from 'greeting-time';\r\nimport { PageHeader } from '@ant-design/pro-layout'\r\n\r\nimport React, { useState } from 'react';\r\nimport service from '../../../services/admin';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\n\r\nexport default function ChangePassword() {\r\n\r\n    const [data, setData] = useState({ name: commonObj.name });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    function save() {\r\n        setLoading(true);\r\n        service.updatePassword(data).then(res => {\r\n            AntdMsg(res.message);\r\n            setData({});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <PageHeader title={greetingTime(new Date()) + ', ' + data?.name} />\r\n                <Divider />\r\n                <Form layout=\"vertical\">\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={8}>\r\n                            <Form.Item label=\"Current Password\">\r\n                                <Input.Password placeholder=\"Current Password\" value={data.currentPassword} onChange={e => { handleChange(e.target.value, 'currentPassword'); }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}></Col>\r\n\r\n                        <Col span={8}>\r\n                            <Form.Item label=\"New Password\">\r\n                                <Input.Password placeholder=\"New Password\" value={data.newPassword} onChange={e => { handleChange(e.target.value, 'newPassword'); }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}></Col>\r\n                        <Col span={8}>\r\n                            <Form.Item label=\"Confirm New Password\">\r\n                                <Input.Password placeholder=\"Confirm New Password\" value={data.confirmNewPassword} onChange={e => { handleChange(e.target.value, 'confirmNewPassword'); }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}></Col>\r\n                        <Col span={8}>\r\n                            <Form.Item>\r\n                                {\r\n                                    data.currentPassword && data.newPassword && data.confirmNewPassword\r\n                                        ? <Button type=\"primary\" style={{ width: '100%' }} htmlType=\"submit\" onClick={save} >Update Password</Button>\r\n                                        : null\r\n                                }\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Spin>\r\n        </>\r\n    );\r\n};","import { Menu } from 'antd';\r\nimport React from 'react';\r\nimport routes from './route';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { LogoutOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst items = [...routes];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach((v, i) => {\r\n        if (v.children?.length) {\r\n            arr[i] = {\r\n                ...arr[i],\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            arr[i] = {\r\n                ...v,\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle(items);\r\n\r\nitems.push(\r\n    {\r\n        label: 'Logout',\r\n        icon: <LogoutOutlined />,\r\n        key: 'logout',\r\n        style: { color: 'red' },\r\n        onClick: () => { window.localStorage.clear(); window.location.reload(); },\r\n        component: <></>\r\n    }\r\n);\r\n\r\nconst App = () => {\r\n    const paths = [];\r\n    useLocation().pathname.split('/')?.reduce((prev, cur) => {\r\n        paths.push(prev + '/' + cur);\r\n        return prev + '/' + cur;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <Menu\r\n                    defaultSelectedKeys={[paths.pop()]}\r\n                    defaultOpenKeys={[...paths]}\r\n                    mode=\"horizontal\"\r\n                    theme=\"dark\"\r\n                    items={items}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Card, Layout } from \"antd\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Menu from \"./Menu\";\r\nimport routes from \"./route\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\n\r\n\r\nconst newRoutes = [];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach(v => {\r\n        if (v.children) {\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            newRoutes.push({ ...v, url: prevBaseUrl + v.url })\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle([...routes]);\r\n\r\n\r\nexport default function MyLayout() {\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Layout className=\"site-layout\">\r\n\r\n                    <Menu />\r\n\r\n\r\n                    <Layout.Content\r\n                        style={{\r\n                            margin: '24px 40px 0 40px',\r\n                        }}\r\n                    >\r\n                        <Card bordered>\r\n                            <Routes>\r\n                                {newRoutes.filter(v => v.key !== 'logout').map((v) => <Route path={v.url} key={v.url} element={<v.component />} />)}\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["style","textAlign","service","data","axios","this","baseURL","type","params","query","console","log","id","ids","TinyMce","props","height","menubar","plugins","toolbar","content_style","initialValue","onChange","editorRef","useRef","onInit","evt","editor","current","init","file_browser_callback_types","file_picker_callback","cb","value","meta","input","document","createElement","setAttribute","onchange","file","files","reader","FileReader","readAsDataURL","onload","result","title","name","click","deprecation_warnings","onSelectionChange","getContent","Aboutus","layout","gutter","span","label","required","v","TandC","FAQ","Contactus","handleChange","useState","editableStr","setEditableStr","a","setA","b","setB","width","padding","map","marginTop","editable","onClick","pre","placeholder","address","e","target","PrivacyPolicy","url","config","UploadImage","fileList","setFileList","count","cropImage","disabled","listType","uploadImage","options","onSuccess","onError","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","total","append","fileService","then","res","uid","err","handleOnChange","fl","handleRemove","aspect","shape","quality","rotate","accept","customRequest","onRemove","className","length","MyPagination","qData","setQData","showTotal","start","page","limit","end","pageSize","pp","showSizeChanger","Address","parentId","setData","loading","setLoading","selected","setSelected","fileType","addNewModalRef","addSubNewModalRef","columns","render","row","i","dataIndex","openForm","isActive","color","onConfirm","deleteData","_id","okText","cancelText","size","danger","icon","DeleteOutlined","EditOutlined","filter","item","hidden","list","key","extra","catch","finally","AntdMsg","message","tableColumns","ellipsis","fixed","tableProps","bordered","Search","showHeader","footer","rowSelection","selectedRowKeys","tableLayout","undefined","useEffect","level","pagination","position","dataSource","scroll","y","x","AddForm","ref","onSubmitCapture","marginBottom","allowClear","htmlType","float","PlusOutlined","forwardRef","open","setOpen","ajxRequesting","setAjxRequesting","useImperativeHandle","dt","save","Object","keys","slug","util","top","onOk","okButtonProps","onCancel","destroyOnClose","maskClosable","spinning","indicator","LoadingOutlined","fontSize","spin","status","entries","forEach","ent","varDt","k","split","parseInt","UserService","avatar","email","phone","ModelModal","userId","LabInstrument","addNewLabelRef","AddLabel","Gases","LabWare","Chemicals","NewForm","Lifescience","Varient","productId","cateId","inventory","strile","unite","volume","brands","chemicals","gases","labware","labinstrument","lifescience","thumbFile","setThumbFile","setFile","imgs","thumbImg","brandId","optionLabelProp","orientation","mode","chemicalIds","find","ch","includes","slice","gasIds","gs","labwareIds","labInstrumentIds","lifeScienceIds","startingPrice","description","metaTitle","metaTag","metaDescription","img","rows","product","user","discountValue","maxDiscountValue","minimunOrderPrice","discountType","dayjs","moment","startDate","format","endDate","Date","productIds","userIds","termCondition","imgUrl","priority","Jobs","skill","location","experience","allProduct","min","max","routes","BankOutlined","children","ApartmentOutlined","component","setBrands","setChemicals","setGases","setLabware","setLifescience","setLabinstrument","serviceBrand","isAll","serviceChemical","serviceGases","serviceLabware","serviceLabinstrument","serviceLifescience","DashboardOutlined","Dashboard","expandable","reverse","src","_","Chemicles","LifeScience","ModelModalRef","setProduct","setUser","ProductService","CalendarOutlined","currentTab","setCurrentTab","changeForm","getDetails","detail","activeKey","items","borderTop","display","flexDirection","paddingTop","paddingRight","doSave","setDoSave","PageHeader","greetingTime","checkedChildren","unCheckedChildren","checked","strong","editing","triggerType","margin","userName","commonObj","currentPassword","newPassword","confirmNewPassword","setAllProduct","vv","serviceProduct","convertMultiToSingle","arr","prevBaseUrl","to","push","LogoutOutlined","window","localStorage","clear","reload","paths","useLocation","pathname","reduce","prev","cur","defaultSelectedKeys","pop","defaultOpenKeys","theme","Error404","subTitle","newRoutes","MyLayout","minHeight","Menu","path","element"],"sourceRoot":""}