{"version":3,"file":"static/js/479.99673510.chunk.js","mappings":"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","sources":["views/pages/Dashboard.js","services/application.js","utils/TinyMce.js","views/pages/Application.js","services/user.js","services/file.js","utils/UploadImage.js","views/components/Pagination.js","services/address.js","views/pages/management/address.js","views/pages/management/userManagement.js","services/master.js","views/pages/master/LabInstrument.js","services/gas.js","views/pages/master/Gases.js","services/labware.js","views/pages/master/labWare.js","services/brand.js","views/pages/master/Brand.js","services/chemicals.js","views/pages/master/Chemicals.js","services/lifescience.js","views/pages/master/LifeScience.js","services/product.js","services/variant.js","views/pages/Product/Varient.js","views/pages/Product/Product.js","services/blogs.js","views/pages/Blog/Blogs.js","services/banner.js","views/pages/Banner.js","services/job.js","views/pages/Jobs/Jobs.js","views/pages/HomeProduct.js","views/layout/route.js","views/pages/admin/Profile.js","views/pages/admin/Change-password.js","views/layout/Menu.js","views/pages/errors/Error404.js","views/layout/Layout.js"],"sourcesContent":["const App = () => {\r\n    return (\r\n        <>\r\n            <h2 style={{textAlign: 'center'}}>Dashboard Coming Soon...</h2>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'application';\r\n\r\n    static detail(data) {\r\n\r\n        return axios.get(this.baseURL + '/details/' + data.type, { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        console.log(data)\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","import React, { useRef } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\n\r\nexport default function TinyMce(props) {\r\n    let { height = 400, menubar = false, plugins, toolbar, content_style, initialValue, onChange } = props;\r\n    if (!plugins) {\r\n        plugins = [\r\n            'advlist autolink lists link image charmap print preview anchor',\r\n            'searchreplace visualblocks code fullscreen',\r\n            'insertdatetime media table paste code help wordcount forecolor backcolor textcolor',\r\n            'image paste table code'\r\n        ];\r\n    }\r\n    if (!toolbar) {\r\n        toolbar = 'undo redo | formatselect | bold italic backcolor | forecolor emoticons'\r\n            + '| table tabledelete | tableprops tablerowprops tablecellprops'\r\n            + '| alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help | image link | imageupload | code | fullscreen';\r\n        // toolbar = 'undo redo | insert | styleselect | bold italic | fontselect fontsizeselect | alignleft aligncenter alignright alignjustify | forecolor backcolor emoticons | bullist numlist outdent indent | link unlink | image responsivefilemanager table | removeformat code help | fullscreen'\r\n    }\r\n    if (!content_style) {\r\n        content_style = 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }';\r\n    }\r\n\r\n    const editorRef = useRef(null);\r\n    const editorContent = () => {\r\n        if (editorRef.current) {\r\n            onChange(editorRef.current.getContent())\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Editor\r\n                onInit={(evt, editor) => editorRef.current = editor}\r\n                {...{ initialValue }}\r\n                init={{\r\n                    height, menubar, plugins, toolbar, content_style,\r\n\r\n                    file_browser_callback_types: 'image',\r\n                    file_picker_callback: function (cb, value, meta) {\r\n                        const input = document.createElement(\"input\");\r\n                        input.setAttribute(\"type\", \"file\");\r\n                        input.setAttribute(\"accept\", \"image/*\");\r\n                        input.onchange = function () {\r\n                            const file = this.files[0];\r\n                            const reader = new FileReader();\r\n                            reader.readAsDataURL(file);\r\n                            reader.onload = () => { cb(reader.result, { title: file.name }); };\r\n                        };\r\n                        input.click();\r\n                    },\r\n                    deprecation_warnings: false\r\n                }}\r\n                onSelectionChange={editorContent}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, DatePicker, Divider } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/application';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport TinyMce from \"../../utils/TinyMce\"\r\nimport { prettyDOM } from '@testing-library/react';\r\n\r\nexport default function Application() {\r\n\r\n    // const [data, setData] = useState([]);\r\n\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [currentTab, setCurrentTab] = useState(0);\r\n\r\n    const handleChange = (value, changeForm) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        try {\r\n            (() => {\r\n                return currentTab === 0 ? service.save({ ...data, type: 'aboutus', data: data.data }) :\r\n                    currentTab === 1 ? service.save({ ...data, type: 'termcondition', data: data.data }) :\r\n                        currentTab === 2 ? service.save({ ...data, type: 'faq', data: data.data }) :\r\n                            currentTab === 3 ? service.save({ ...data, type: 'contactus', data: data.data }) :\r\n                                currentTab === 4 ? service.save({ ...data, type: 'privacy-policy', data: data.data }) : null\r\n\r\n            })().then(res => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                setCurrentTab((currentTab + 1) % 5);\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        } catch (err) {\r\n            AntdMsg(err.message, 'error');\r\n        }\r\n    }\r\n\r\n    const getDetails = (data) => {\r\n        setAjxRequesting(true);\r\n\r\n        service.detail(data).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentTab === 0) {\r\n            getDetails({ _id: data._id, type: \"aboutus\" });\r\n        } else if (currentTab === 1) {\r\n            getDetails({ _id: data._id, type: \"termcondition\" });\r\n        } else if (currentTab === 2) {\r\n            getDetails({ _id: data._id, type: \"faq\" });\r\n        } else if (currentTab === 3) {\r\n            getDetails({ _id: data._id, type: \"contactus\" });\r\n        } else if (currentTab === 4) {\r\n            getDetails({ _id: data._id, type: \"privacy-policy\" });\r\n        }\r\n    }, [currentTab])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\r\n                    items={[\r\n                        {\r\n                            label: \"About us\",\r\n                            key: 0,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <Aboutus {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Terms & Condition\",\r\n                            key: 1,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <TandC {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"FAQ\",\r\n                            key: 2,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <FAQ {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Contact us\",\r\n                            key: 3,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <Contactus {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Privacy Policy\",\r\n                            key: 4,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <PrivacyPolicy {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        }\r\n                    ]}\r\n                />\r\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\", paddingTop: \"5px\", paddingRight: \"70px\" }}>\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 4 ? \"Save\" : \"Next\"}</Button>\r\n                </div>\r\n            </Spin>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, data }) {\r\n\r\n    const [modelNames, setModelNames] = useState([])\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined) {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const models = data?.map((item) => (\r\n            {\r\n                label: item.modelName,\r\n                value: item.modelId,\r\n            }\r\n\r\n        ))\r\n        setModelNames(models)\r\n\r\n    }, [data])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                {/*<Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select value={data.fuelType} onChange={(v) => onChange(v, \"fuelType\")} placeholder=\"Select by Fuel type\" allowClear>\r\n                            <Select.Option value=\"Diesel\" >Diesel</Select.Option>\r\n                            <Select.Option value=\"Petrol\" >Petrol</Select.Option>\r\n                            <Select.Option value=\"Petrol + CNG\" >Petrol + CNG</Select.Option>\r\n                            <Select.Option value=\"Petrol + LPG\" >Petrol + LPG</Select.Option>\r\n                            <Select.Option value=\"Electric\" >Electric</Select.Option>\r\n                            <Select.Option value=\"Hybrid\" >Hybrid</Select.Option>\r\n                        </Select>\r\n\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select\r\n                            showSearch\r\n                            allowClear\r\n                            placeholder=\"Select by Model Name\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={(v) => onChange(v, \"modelId\")}\r\n                            filterOption={(input, option) =>\r\n                                (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                            }\r\n                            options={modelNames}\r\n                        />\r\n\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                        </Col>*/}\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected dealer?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [currentTab, setCurrentTab] = useState(0);\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n\r\n        try {\r\n            (() => {\r\n                return currentTab === 0 ? service.save({ type: 'aboutus', data: data.data }) :\r\n                    currentTab === 1 ? service.save({ type: 'termcondition', data: data.data }) :\r\n                        currentTab === 2 ? service.save({ type: 'faq', data: data.data }) :\r\n                            currentTab === 3 ? service.save({ type: 'contactus', data: data.data }) :\r\n                                currentTab === 4 ? service.save({ type: 'privacy-policy', data: data.data }) : null\r\n\r\n            })().then(res => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                setCurrentTab((currentTab + 1) % 5);\r\n                list();\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        } catch (err) {\r\n            AntdMsg(err.message, 'error');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [currentTab, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setCurrentTab(0);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        console.log(data)\r\n        if (data.type === \"aboutus\") {\r\n            setCurrentTab(0)\r\n        } else if (data.type === \"termcondition\") {\r\n            setCurrentTab(1)\r\n        } else if (data.type === \"faq\") {\r\n            setCurrentTab(2)\r\n        } else if (currentTab === 3) {\r\n            data.type = \"contactus\"\r\n        } else if (currentTab === 4) {\r\n            data.type = \"privacy-policy\"\r\n        }\r\n    }, [currentTab])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 4 ? \"Save\" : \"Next\"}</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"About us\",\r\n                                key: 0,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <Aboutus {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                                disabled: data.type === \"aboutus\"\r\n                            },\r\n                            {\r\n                                label: \"Terms & Condition\",\r\n                                key: 1,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <TandC {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"FAQ\",\r\n                                key: 2,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <FAQ {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"Contact us\",\r\n                                key: 3,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <Contactus {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"Privacy Policy\",\r\n                                key: 4,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <PrivacyPolicy {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst Aboutus = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TandC = ({ data, handleChange }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst FAQ = ({ data, handleChange }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Contactus = ({ data, handleChange }) => {\r\n\r\n    const [editableStr, setEditableStr] = useState('This is an editable text.');\r\n    const [a, setA] = useState([1])\r\n    const [b, setB] = useState([1])\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]} style={{ width: \"100%\", padding: \"0 5px\" }}>\r\n                    <Col span={6}>\r\n\r\n                        {a.map(() => {\r\n                            return <Form.Item label=\"Email\" required>\r\n\r\n                                <Typography.Paragraph\r\n\r\n                                    style={{ marginTop: \"8px\" }}\r\n                                    editable={{\r\n                                        onChange: setEditableStr,\r\n                                    }}\r\n                                >\r\n                                    {editableStr}\r\n                                </Typography.Paragraph>\r\n\r\n                            </Form.Item>\r\n\r\n                        })}\r\n                        <Button onClick={() => setA((pre) => {\r\n                            return [...pre, 1]\r\n                        })}>Add</Button>\r\n\r\n                        {/* <Form.Item label=\"Email\" required>\r\n\r\n                            <Input type=\"email\" placeholder=\"johndoe123@gmail.com\" value={data.data?.email} onChange={e => { handleChange({ data: { ...data.data, email: e.target.value } }) }} />\r\n\r\n                        </Form.Item> */}\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        {b.map(() => {\r\n                            return <Form.Item label=\"Phone Number\" required>\r\n\r\n                                <Typography.Paragraph\r\n                                    style={{ marginTop: \"8px\" }}\r\n                                    editable={{\r\n                                        onChange: setEditableStr,\r\n                                    }}\r\n                                >\r\n                                    {editableStr}\r\n                                </Typography.Paragraph>\r\n\r\n                            </Form.Item>\r\n                        })}\r\n                        <Button onClick={() => setB((pre) => {\r\n                            return [...pre, 1]\r\n                        })}>Add</Button>\r\n                        {/* <Form.Item label=\"Phone Number\" required>\r\n                            <Input placeholder=\"995412XXX\" value={data.data?.number} onChange={e => { handleChange({ data: { ...data.data, number: e.target.value } }) }} />\r\n                        </Form.Item> */}\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Address\" required>\r\n                            <Input placeholder=\"Street No: 9, Delhi: 110054\" value={data.data?.address} onChange={e => { handleChange({ data: { ...data.data, address: e.target.value } }) }} />\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\nconst PrivacyPolicy = ({ data, handleChange }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/details-user/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/list-user', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/save-user\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/delete-user', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'file';\r\n\r\n    static get(url) {\r\n        return axios.get(\"../\"+  url);\r\n    }\r\n\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static remove(data) {\r\n        return axios.post(this.baseURL + \"/remove\", data);\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload } from \"antd\";\r\nimport ImgCrop from 'antd-img-crop';\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\n\r\nexport default function UploadImage({ fileList, setFileList, count = 1, cropImage = null, disabled = false, listType = \"picture-card\" }) {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\r\n        })\r\n    };\r\n\r\n    if (cropImage) {\r\n        if (typeof cropImage !== typeof {}) {\r\n            cropImage = {};\r\n        }\r\n        cropImage.aspect = cropImage.aspect || 1;\r\n        cropImage.shape = cropImage.shape || 'rect';\r\n        cropImage.quality = cropImage.quality || 1;\r\n        return (\r\n            <ImgCrop rotate aspect shape={cropImage.shape} quality={cropImage.quality} >\r\n                <Upload\r\n                    accept=\"image/*\"\r\n                    customRequest={uploadImage}\r\n                    onChange={handleOnChange}\r\n                    onRemove={handleRemove}\r\n                    listType={listType}\r\n                    fileList={fileList}\r\n                    className=\"image-upload-grid\"\r\n                    disabled={disabled}\r\n                >\r\n                    {fileList?.length >= count ? null : <div>Upload</div>}\r\n                </Upload>\r\n            </ImgCrop>\r\n        );\r\n    } else {\r\n        return <Upload\r\n            accept=\"image/*\"\r\n            customRequest={uploadImage}\r\n            onChange={handleOnChange}\r\n            onRemove={handleRemove}\r\n            listType={listType}\r\n            fileList={fileList}\r\n            className=\"image-upload-grid\"\r\n            disabled={disabled}\r\n        >\r\n            {fileList?.length >= count ? null : <div>Upload</div>}\r\n        </Upload>\r\n    }\r\n\r\n};","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailJob(id, data) {\r\n        return axios.get(this.baseURL + '/address/details' + id, { params: data });\r\n    }\r\n    static listJob(data) {\r\n        return axios.get(this.baseURL + '/address/list', { params: data });\r\n    }\r\n    static saveJob(data, query) {\r\n        return axios.post(this.baseURL + '/address/save', data, { params: query });\r\n    }\r\n    static deleteJob(id) {\r\n        return axios.post(this.baseURL + '/address/delete', { ids: id });\r\n    }\r\n\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n//import service from '../../../services/chemicle';\r\nimport util from '../../../utils/util';\r\nimport service from '../../../services/address';\r\n\r\n\r\n\r\n\r\nexport default function Address({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addSubNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Lable',\r\n            dataIndex: 'lable',\r\n            width: 100,\r\n            render: (v, row) => {\r\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\r\n            }\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listJob(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteJob(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !parentId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailsjob(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveJob(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e.target.value }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport UserService from '../../../services/user';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport Address from './address';\r\nimport service from '../../../services/address';\r\n\r\n\r\nexport default function UserManagement() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n    const ModelModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Job',\r\n            dataIndex: '_id',\r\n            width: 80,\r\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { ModelModalRef.current.openForm({ _id: row._id, name: row.name }) }} >Address</Button>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: status => {\r\n                if (status == \"blocked\") {\r\n                    return <Tag color='red'>Blocked</Tag>\r\n                } else if (status == \"active\") {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color=\"yellow\">Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        UserService.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        UserService.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <ModelModal ref={ModelModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select value={qData.status} allowClear placeholder=\"Search By Status\" onChange={e => { setQData({...qData, status: e }) }} >\r\n                            <Select.Option value=\"active\">Active</Select.Option>\r\n                            <Select.Option value=\"inactive\">Inactive</Select.Option>\r\n                            <Select.Option value=\"blocked\">Blocked</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        UserService.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        UserService.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ avatar: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={20}>\r\n                                <Row gutter={[12, 2]}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Username\" required>\r\n                                            <Input placeholder=\"John Doe\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Email\" required>\r\n                                            <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange({ email: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Phone\" required>\r\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Avatar\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value=\"active\">Active</Select.Option>\r\n                                        <Select.Option value=\"inactive\">Inactive</Select.Option>\r\n                                        <Select.Option value=\"blocked\">Blocked</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst ModelModal = forwardRef((props, ref) => {\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All Job List of <Typography.Text type=\"danger\">{data?.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <Address {...{ userId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/lab-instrument/details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/lab-instrument/list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/lab-instrument/save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/lab-instrument/delete', { ids: id });\r\n    }\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/master';\r\nimport util from '../../../utils/util';\r\n\r\n\r\nexport default function LabInstrument({ parentId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Button',\r\n            dataIndex: 'button',\r\n            width: 100,\r\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\r\n\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unique Id',\r\n            dataIndex: 'uniqueId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({slug: util.removeSpecialChars(data.name || \"\")});\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Unique Id\" required>\r\n                                    <Input placeholder=\"Unique Id\" value={data.uniqueId} onChange={e => { handleChange({ uniqueId: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                // onOk={save}\r\n                // okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            // footer={[\r\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n            // ]}\r\n            >\r\n                <LabInstrument parentId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/gas/details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/gas/list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/gas/save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/gas/delete', { ids: id });\r\n    }\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/gas';\r\nimport util from '../../../utils/util';\r\n\r\n\r\nexport default function Gases({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Button',\r\n            dataIndex: 'button',\r\n            width: 100,\r\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\r\n\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unique Id',\r\n            dataIndex: 'uniqueId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Unique Id\" required>\r\n                                    <Input placeholder=\"Unique Id\" value={data.uniqueId} onChange={e => { handleChange({ uniqueId: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                // onOk={save}\r\n                // okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            // footer={[\r\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n            // ]}\r\n            >\r\n                <Gases parentId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/labware/details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/labware/list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/labware/save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/labware/delete', { ids: id });\r\n    }\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/labware';\r\nimport util from '../../../utils/util';\r\n\r\n\r\nexport default function LabWare({ parentId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Button',\r\n            dataIndex: 'button',\r\n            width: 100,\r\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\r\n\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unique Id',\r\n            dataIndex: 'uniqueId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Unique Id\" required>\r\n                                    <Input placeholder=\"Unique Id\" value={data.uniqueId} onChange={e => { handleChange({ uniqueId: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                // onOk={save}\r\n                // okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            // footer={[\r\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n            // ]}\r\n            >\r\n                <LabWare parentId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master/';\r\n\r\n\r\n\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + \"brand/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"brand/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + 'brand/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + 'brand/details/' + id);\r\n    }\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/brand';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n\r\n\r\n\r\nexport default function Brand() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        // service.list().then((res)=>{\r\n        //     console.log(res)\r\n        // })\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        console.log('data', data);\r\n    }, [data]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master/';\r\n\r\n\r\n\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + \"chemical/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"chemical/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + 'chemical/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + 'chemical/details/' + id);\r\n    }\r\n\r\n\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/chemicals';\r\nimport util from '../../../utils/util';\r\n\r\n\r\n\r\nexport default function Chemicals({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addSubNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Lable',\r\n            dataIndex: 'lable',\r\n            width: 100,\r\n            render: (v, row) => {\r\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\r\n            }\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !parentId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <NewForm ref={addSubNewModalRef} ></NewForm>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst NewForm = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={<>Data of &nbsp;<span style={{ color: 'red' }}>{data.name}</span></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n                footer={null}\r\n            >\r\n                <Chemicals parentId={data._id}></Chemicals>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master/';\r\n\r\n\r\n\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + \"life-science/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"life-science/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + 'life-science/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + 'life-science/details/' + id);\r\n    }\r\n\r\n\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/lifescience';\r\nimport util from '../../../utils/util';\r\n\r\n\r\n\r\nexport default function Lifescience({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addSubNewModalRef = useRef();\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Lable',\r\n            dataIndex: 'lable',\r\n            width: 100,\r\n            render: (v, row) => {\r\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\r\n            }\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !parentId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <NewForm ref={addSubNewModalRef} ></NewForm>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst NewForm = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={<>Data of &nbsp;<span style={{ color: 'red' }}>{data.name}</span></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n                footer={null}\r\n            >\r\n                <Lifescience parentId={data._id}></Lifescience>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'ecomm/product/';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + 'list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + 'delete', { ids: id });\r\n    }\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'ecomm/variant/';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + 'list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + 'delete', { ids: id });\r\n    }\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/variant';\r\nimport util from '../../../utils/util';\r\n\r\n\r\nexport default function Varient({ productId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', productId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        // {\r\n        //     title: 'Name',\r\n        //     dataIndex: 'name',\r\n        // },\r\n        // {\r\n        //     title: 'Varient',\r\n        //     dataIndex: 'varient',\r\n        //     width: 100,\r\n        //     render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Varient</Button> },\r\n\r\n        // },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'cateId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Color',\r\n            dataIndex: 'color',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Inventory',\r\n            dataIndex: 'inventory',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Strile',\r\n            dataIndex: 'strile',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Total',\r\n            dataIndex: 'total',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unit',\r\n            dataIndex: 'unite',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Volume',\r\n            dataIndex: 'volume',\r\n            width: 100,\r\n        },\r\n        // {\r\n        //     title: 'Status',\r\n        //     dataIndex: 'status',\r\n        //     width: 80,\r\n        //     render: isActive => {\r\n        //         if (isActive) {\r\n        //             return <Tag color='green'>Active</Tag>\r\n        //         } else {\r\n        //             return <Tag color='red'>Inactive</Tag>\r\n        //         }\r\n        //     },\r\n        // },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!productId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Varient</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, productId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, productId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { productId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Varient'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Category\" required>\r\n                                    <Input placeholder=\"cateId\" value={data.cateId} onChange={e => { handleChange({ cateId: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Color\" required>\r\n                                    <Input placeholder=\"color\" value={data.color} onChange={e => { handleChange({ color: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Inventory\" required>\r\n                                    <Input placeholder=\"inventory\" value={data.inventory} onChange={e => { handleChange({ inventory: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Strile\" required>\r\n                                    <Input placeholder=\"strile\" value={data.strile} onChange={e => { handleChange({ strile: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Total\" required>\r\n                                    <Input placeholder=\"total\" value={data.total} onChange={e => { handleChange({ total: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Meta-Description\" required>\r\n                                    <Input placeholder=\"Meta-Description\" value={data.metaDescription} onChange={e => { handleChange({ metaDescription: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Unit\" required>\r\n                                    <Input placeholder=\"unite\" value={data.unite} onChange={e => { handleChange({ unite: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Volume\" required>\r\n                                    <Input placeholder=\"volume\" value={data.volume} onChange={e => { handleChange({ volume: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add User' : 'List of Varient')}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                // onOk={save}\r\n                // okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            // footer={[\r\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n            // ]}\r\n            >\r\n                <Varient productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, Divider } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/product';\r\nimport serviceBrand from '../../../services/brand';\r\nimport serviceChemical from '../../../services/chemicals';\r\nimport serviceGases from '../../../services/gas';\r\nimport serviceLabware from '../../../services/labware';\r\nimport serviceLifescience from '../../../services/lifescience';\r\nimport serviceLabinstrument from '../../../services/master';\r\nimport util from '../../../utils/util';\r\nimport Varient from './Varient';\r\nimport UploadImage from '../../../utils/UploadImage';\r\n\r\n\r\n\r\nexport default function Product({ parentId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [brands, setBrands] = useState([]);\r\n    const [chemicals, setChemicals] = useState([]);\r\n    const [gases, setGases] = useState([]);\r\n    const [labware, setLabware] = useState([]);\r\n    const [lifescience, setLifescience] = useState([]);\r\n    const [labinstrument, setLabinstrument] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Variant',\r\n            dataIndex: 'varient',\r\n            width: 100,\r\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Variant</Button> },\r\n\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Starting Price',\r\n            dataIndex: 'startingPrice',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Meta-Title',\r\n            dataIndex: 'metaTitle',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Meta-Tag',\r\n            dataIndex: 'metaTag',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Meta-Description',\r\n            dataIndex: 'metaDescription',\r\n            width: 100,\r\n        },\r\n        // {\r\n        //     title: 'Inventory',\r\n        //     dataIndex: 'inventory',\r\n        //     width: 100,\r\n        // },\r\n        // {\r\n        //     title: 'Actual-Price',\r\n        //     dataIndex: 'actualPrice',\r\n        //     width: 100,\r\n        // },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n        serviceBrand.list({ isAll: 1 }).then(res => {\r\n            setBrands(res.data.map(v => ({ label: v.name, value: v._id })));\r\n        })\r\n        serviceChemical.list({ isAll: 1 }).then(res => {\r\n            setChemicals(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n        })\r\n        serviceGases.listUser({ isAll: 1 }).then(res => {\r\n            setGases(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n        })\r\n        serviceLabware.listUser({ isAll: 1 }).then(res => {\r\n            setLabware(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n        })\r\n        serviceLabinstrument.listUser({ isAll: 1 }).then(res => {\r\n            setLabinstrument(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n        })\r\n        serviceLifescience.list({ isAll: 1 }).then(res => {\r\n            setLifescience(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n        })\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>Product List</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId, brands, chemicals, gases, labware, labinstrument, lifescience }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId, brands, chemicals, gases, labware, labinstrument, lifescience } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [thumbFile, setThumbFile] = useState([]);\r\n    const [file, setFile] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFile(res.data.imgs.length ? [...res.data.imgs] : [])\r\n            setThumbFile(res.data.thumbImg ? [res.data.thumbImg] : [])\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data?.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, thumbImg: thumbFile[0] })\r\n    }, [thumbFile])\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, imgs: file })\r\n    }, [file])\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({})\r\n        }\r\n    }, [open])\r\n\r\n    // useEffect(() => {\r\n    //     console.log('data.chemicalIds', data.chemicalIds);\r\n    // }, [data.chemicalIds])\r\n\r\n    // useEffect(() => {\r\n    //     console.log('data.gasIds', data.gasIds);\r\n    // }, [data.gasIds])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add New' : 'Edit') + ' Product'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1000}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Brand\" required>\r\n                                    <Select\r\n                                        // mode=\"multiple\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                        placeholder=\"Select Brand\"\r\n                                        onChange={v => { handleChange({ brandId: v }) }}\r\n                                        value={data.brandId}\r\n                                        optionLabelProp=\"label\"\r\n                                        allowClear={true}\r\n                                        options={brands || []}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\">Chemicals</Divider>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Choose Chemicals\" required>\r\n                                    <Select\r\n                                        mode=\"multiple\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                        placeholder=\"Select Chemicals\"\r\n                                        onChange={v => { setData({ ...data, chemicalIds: [v] }) }}\r\n                                        value={data.chemicalIds?.[0]}\r\n                                        optionLabelProp=\"label\"\r\n                                        allowClear={true}\r\n                                        options={chemicals.filter(v => !v.parentId) || []}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {\r\n                                data?.chemicalIds?.map((v, i) => (\r\n                                    chemicals?.find(ch => v?.includes(ch?.parentId))\r\n                                        ? <Col span={12} key={v}>\r\n                                            <Form.Item label=\"Choose Chemical\" required>\r\n                                                <Select\r\n                                                    mode=\"multiple\"\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                    }}\r\n                                                    placeholder=\"Select Categories\"\r\n                                                    onChange={v => {\r\n                                                        if (v) {\r\n                                                            setData({ ...data, chemicalIds: [...data.chemicalIds.slice(0, i + 1), v] });\r\n                                                        }\r\n                                                    }}\r\n                                                    value={data.chemicalIds?.[i + 1]}\r\n                                                    optionLabelProp=\"label\"\r\n                                                    options={chemicals.filter(ch => v?.includes(ch.parentId)) || []}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        : null\r\n                                ))\r\n                            }\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\">Gases</Divider>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Choose Gases\" required>\r\n                                    <Select\r\n                                        mode=\"multiple\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                        placeholder=\"Select Gases\"\r\n                                        onChange={v => { setData({ ...data, gasIds: [v] }) }}\r\n                                        value={data.gasIds?.[0]}\r\n                                        optionLabelProp=\"label\"\r\n                                        allowClear={true}\r\n                                        options={gases.filter(v => !v.parentId) || []}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {\r\n                                data?.gasIds?.map((v, i) => (\r\n                                    gases?.find(gs => v?.includes(gs?.parentId))\r\n                                        ? <Col span={12} key={v}>\r\n                                            <Form.Item label=\"Choose Gases\" required>\r\n                                                <Select\r\n                                                    mode=\"multiple\"\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                    }}\r\n                                                    placeholder=\"Select Categories\"\r\n                                                    onChange={v => {\r\n                                                        if (v) {\r\n                                                            setData({ ...data, gasIds: [...data.gasIds.slice(0, i + 1), v] });\r\n                                                        }\r\n                                                    }}\r\n                                                    value={data.gasIds?.[i + 1]}\r\n                                                    optionLabelProp=\"label\"\r\n                                                    options={gases.filter(gs => v?.includes(gs.parentId)) || []}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        : null\r\n                                ))\r\n                            }\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\">Labware</Divider>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Choose Labware\" required>\r\n                                    <Select\r\n                                        mode=\"multiple\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                        placeholder=\"Select Labware\"\r\n                                        onChange={v => { setData({ ...data, labwareIds: [v] }) }}\r\n                                        value={data.labwareIds?.[0]}\r\n                                        optionLabelProp=\"label\"\r\n                                        allowClear={true}\r\n                                        options={labware.filter(v => !v.parentId) || []}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {\r\n                                data?.labwareIds?.map((v, i) => (\r\n                                    labware?.find(gs => v?.includes(gs?.parentId))\r\n                                        ? <Col span={12} key={v}>\r\n                                            <Form.Item label=\"Choose Labware\" required>\r\n                                                <Select\r\n                                                    mode=\"multiple\"\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                    }}\r\n                                                    placeholder=\"Select Categories\"\r\n                                                    onChange={v => {\r\n                                                        if (v) {\r\n                                                            setData({ ...data, labwareIds: [...data.labwareIds.slice(0, i + 1), v] });\r\n                                                        }\r\n                                                    }}\r\n                                                    value={data.labwareIds?.[i + 1]}\r\n                                                    optionLabelProp=\"label\"\r\n                                                    options={labware.filter(gs => v?.includes(gs.parentId)) || []}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        : null\r\n                                ))\r\n                            }\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\">Lab-Instrument</Divider>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Choose Lab-Instrument\" required>\r\n                                    <Select\r\n                                        mode=\"multiple\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                        placeholder=\"Select Lab-Instrument\"\r\n                                        onChange={v => { setData({ ...data, labInstrumentIds: [v] }) }}\r\n                                        value={data.labInstrumentIds?.[0]}\r\n                                        optionLabelProp=\"label\"\r\n                                        allowClear={true}\r\n                                        options={labinstrument.filter(v => !v.parentId) || []}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {\r\n                                data?.labInstrumentIds?.map((v, i) => (\r\n                                    labinstrument?.find(gs => v?.includes(gs?.parentId))\r\n                                        ? <Col span={12} key={v}>\r\n                                            <Form.Item label=\"Choose Lab-Instrument\" required>\r\n                                                <Select\r\n                                                    mode=\"multiple\"\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                    }}\r\n                                                    placeholder=\"Select Categories\"\r\n                                                    onChange={v => {\r\n                                                        if (v) {\r\n                                                            setData({ ...data, labInstrumentIds: [...data.labInstrumentIds.slice(0, i + 1), v] });\r\n                                                        }\r\n                                                    }}\r\n                                                    value={data.labInstrumentIds?.[i + 1]}\r\n                                                    optionLabelProp=\"label\"\r\n                                                    options={labinstrument.filter(gs => v?.includes(gs.parentId)) || []}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        : null\r\n                                ))\r\n                            }\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\">Life-Science</Divider>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Choose Life-Science\" required>\r\n                                    <Select\r\n                                        mode=\"multiple\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                        placeholder=\"Select Life-Science\"\r\n                                        onChange={v => { setData({ ...data, lifeScienceIds: [v] }) }}\r\n                                        value={data.lifeScienceIds?.[0]}\r\n                                        optionLabelProp=\"label\"\r\n                                        allowClear={true}\r\n                                        options={lifescience.filter(v => !v.parentId) || []}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {\r\n                                data?.lifeScienceIds?.map((v, i) => (\r\n                                    lifescience?.find(gs => v?.includes(gs?.parentId))\r\n                                        ? <Col span={12} key={v}>\r\n                                            <Form.Item label=\"Choose Life-Science\" required>\r\n                                                <Select\r\n                                                    mode=\"multiple\"\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                    }}\r\n                                                    placeholder=\"Select Categories\"\r\n                                                    onChange={v => {\r\n                                                        if (v) {\r\n                                                            setData({ ...data, lifeScienceIds: [...data.lifeScienceIds.slice(0, i + 1), v] });\r\n                                                        }\r\n                                                    }}\r\n                                                    value={data.lifeScienceIds?.[i + 1]}\r\n                                                    optionLabelProp=\"label\"\r\n                                                    options={lifescience.filter(gs => v?.includes(gs.parentId)) || []}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        : null\r\n                                ))\r\n                            }\r\n                            <Col span={24}>\r\n                                <Divider />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Starting Price\" required>\r\n                                    <Input placeholder=\"Starting Price\" value={data.startingPrice} onChange={e => { handleChange({ startingPrice: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <Input placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Meta-Title\" required>\r\n                                    <Input placeholder=\"Meta-Title\" value={data.metaTitle} onChange={e => { handleChange({ metaTitle: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Meta-Tag\" required>\r\n                                    <Input placeholder=\"Meta-Tag\" value={data.metaTag} onChange={e => { handleChange({ metaTag: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Meta-Description\" required>\r\n                                    <Input placeholder=\"Meta-Description\" value={data.metaDescription} onChange={e => { handleChange({ metaDescription: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Inventory\" required>\r\n                                    <Input placeholder=\"Inventory\" value={data.inventory} onChange={e => { handleChange({ inventory: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            {/* <Col span={12}>\r\n                                <Form.Item label=\"Actual-Price\" required>\r\n                                    <Input placeholder=\"Actual-Price\" value={data.actualPrice} onChange={e => { handleChange({ actualPrice: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Thumbnail Photo\">\r\n                                    <UploadImage {...{ fileList: thumbFile, setFileList: setThumbFile }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList: file, setFileList: setFile, count: 20 }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add User' : 'Variants' + \" of \" + `${(data.name)}`)}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                // onOk={save}\r\n                // okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            // footer={[\r\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n            // ]}\r\n            >\r\n                <Varient productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    static list(data) {\r\n        return axios.get(\"blog/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(\"blog/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post('blog/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get('blog/details/' + id);\r\n    }\r\n\r\n\r\n\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/blogs';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport UploadImage from '../../../utils/UploadImage';\r\n\r\n\r\n\r\nexport default function Blogs() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n            width: 100\r\n        },\r\n\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        // service.list().then((res)=>{\r\n        //     console.log(res)\r\n        // })\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.img ? [res.data?.img] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        console.log(fileList)\r\n        setData({ ...data, img: fileList?.[0] })\r\n    }, [fileList]);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <UploadImage {...{ fileList, setFileList, count: 34 }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <Input placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'banner';\r\n\r\n    // for Banners : \r\n    static bannerDetails(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static bannerList(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static bannerSave(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static bannerDelete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport service from '../../services/banner';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport UploadImage from '../../utils/UploadImage';\r\n\r\n\r\nexport default function Banner() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Image',\r\n            dataIndex: 'imgUrl',\r\n            render: (v) => {\r\n                return <Image src={v?.url} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Uploaded At',\r\n            dataIndex: 'createdAt',\r\n            width: 400,\r\n            render: (v) => {\r\n                return moment(v).format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\r\n            }\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'type',\r\n            width: 80,\r\n            render: (_, row) => {\r\n                return (<span>{row.type}</span>)\r\n            }\r\n\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this image?. Be sure to delete the image from server.\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.bannerList(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.bannerDelete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Banners</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        {/* <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear /> */}\r\n                    </Form.Item>\r\n                </Col>\r\n                {/* <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col> */}\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.bannerDetails(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.imgUrl ? [res.data?.imgUrl] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n            setAjxRequesting(true);\r\n            service.bannerSave(data).then((res) => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                list();\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ imgUrl: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Banner'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} listType=\"picture\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Priority\">\r\n                                    <Input placeholder='Priority' value={data.priority} onChange={e => { handleChange({ priority: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Type\" required>\r\n                                    <Select value={data.type} onChange={v => { handleChange({ type: v }) }} >\r\n                                        <Select.Option value=\"home\">Home</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'job';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/job';\r\nimport util from '../../../utils/util';\r\n\r\n\r\nexport default function Jobs({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Designation',\r\n            dataIndex: 'name',\r\n        },\r\n        // {\r\n        //     title: 'Button',\r\n        //     dataIndex: 'button',\r\n        //     width: 100,\r\n        //     render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\r\n\r\n        // },\r\n        {\r\n            title: 'Skill',\r\n            dataIndex: 'skill',\r\n            // width: 100,\r\n        },\r\n        {\r\n            title: 'Location',\r\n            dataIndex: 'location',\r\n            // width: 100,\r\n        },\r\n        {\r\n            title: 'Experience',\r\n            dataIndex: 'experience',\r\n            // width: 100,\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n            // width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Open</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Close</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={16}>\r\n                                <Form.Item label=\"Designation\" required>\r\n                                    <Input placeholder=\"Designation\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Skill\" required>\r\n                                    <Input placeholder=\"Skill\" value={data.skill} onChange={e => { handleChange({ skill: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Location\" required>\r\n                                    <Input placeholder=\"Location\" value={data.location} onChange={e => { handleChange({ location: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Experience\" required>\r\n                                    <Input placeholder=\"Experience\" value={data.experience} onChange={e => { handleChange({ experience: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <Input.TextArea placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Open</Select.Option>\r\n                                        <Select.Option value={false}>Close</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Opportunity'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                // onOk={save}\r\n                // okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            // footer={[\r\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n            // ]}\r\n            >\r\n                {/* <Gases parentId={data._id} /> */}\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport service from '../../services/product';\r\nimport serviceBrand from '../../services/brand';\r\nimport serviceChemical from '../../services/chemicals';\r\nimport serviceGases from '../../services/gas';\r\nimport serviceLabware from '../../services/labware';\r\nimport util from '../../utils/util';\r\nimport Varient from './Product/Varient';\r\nimport serviceLifeScience from '../../services/lifescience';\r\nimport serviceLabInstrument from '../../services/master';\r\n\r\n\r\n\r\n\r\nexport default function Product({ parentId }) {\r\n\tconst [data, setData] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [selected, setSelected] = useState([]);\r\n\tconst [brands, setBrands] = useState([]);\r\n\tconst [lifeScience, setLifeScience] = useState([]);\r\n\tconst [chemicals, setChemicals] = useState([]);\r\n\tconst [labInstrument, setLabInstrument] = useState([])\r\n\tconst [gases, setGases] = useState([]);\r\n\tconst [labware, setLabware] = useState([])\r\n\tconst [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n\tconst addNewModalRef = useRef();\r\n\tconst addNewLabelRef = useRef();\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: '#',\r\n\t\t\twidth: 40,\r\n\t\t\trender: (v, row, i) => <b>{i + 1}</b>\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Name',\r\n\t\t\tdataIndex: 'name',\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttitle: 'Slug',\r\n\t\t\tdataIndex: 'slug',\r\n\t\t\twidth: 100,\r\n\t\t},\r\n\r\n\t\t// {\r\n\t\t//     title: 'Inventory',\r\n\t\t//     dataIndex: 'inventory',\r\n\t\t//     width: 100,\r\n\t\t// },\r\n\t\t// {\r\n\t\t//     title: 'Actual-Price',\r\n\t\t//     dataIndex: 'actualPrice',\r\n\t\t//     width: 100,\r\n\t\t// },\r\n\t\t{\r\n\t\t\ttitle: 'Status',\r\n\t\t\tdataIndex: 'status',\r\n\t\t\twidth: 80,\r\n\t\t\trender: isActive => {\r\n\t\t\t\tif (isActive) {\r\n\t\t\t\t\treturn <Tag color='green'>Active</Tag>\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn <Tag color='red'>Inactive</Tag>\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Action',\r\n\t\t\tdataIndex: '_id',\r\n\t\t\twidth: 70,\r\n\t\t\trender: (v, row) => {\r\n\t\t\t\treturn <>\r\n\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\ttitle=\"Are you sure to delete this data?\"\r\n\t\t\t\t\t\tonConfirm={() => { deleteData(row._id); }}\r\n\t\t\t\t\t\tokText=\"Yes\"\r\n\t\t\t\t\t\tcancelText=\"No\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t<Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t},\r\n\t].filter(item => !item.hidden);\r\n\tfunction list() {\r\n\t\tsetLoading(true);\r\n\t\tservice.listUser(qData).then(res => {\r\n\t\t\tsetData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n\t\t\tsetQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n\t\t}).catch(err => { }).finally(() => {\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t}\r\n\tconst deleteData = (id) => {\r\n\t\tservice.deleteUser(id).then(res => {\r\n\t\t\tAntdMsg(res.message);\r\n\t\t\tlist();\r\n\t\t\tsetSelected([]);\r\n\t\t}).catch(err => {\r\n\t\t\tAntdMsg(err.message, 'error');\r\n\t\t})\r\n\t}\r\n\tconst tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\ttableColumns[0].fixed = true;\r\n\ttableColumns[tableColumns.length - 1].fixed = 'right';\r\n\tconst tableProps = {\r\n\t\tbordered: true,\r\n\t\tloading,\r\n\t\tsize: 'small',\r\n\t\ttitle: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n\t\tshowHeader: true,\r\n\t\tfooter: () => <Pagination {...{ qData, setQData }} />,\r\n\t\trowSelection: {\r\n\t\t\tonChange: (selectedRowKeys) => {\r\n\t\t\t\tsetSelected(selectedRowKeys);\r\n\t\t\t},\r\n\t\t},\r\n\t\ttableLayout: undefined,\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"333\")\r\n\t\tserviceBrand.list({ isAll: 1 }).then(res => {\r\n\t\t\tsetBrands(res.data.map(v => ({ label: v.name, value: v._id })));\r\n\t\t})\r\n\t\tserviceChemical.list({ isAll: 1 }).then(res => {\r\n\t\t\tsetChemicals(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n\t\t})\r\n\t\tserviceGases.listUser({ isAll: 1 }).then(res => {\r\n\t\t\tsetGases(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n\t\t})\r\n\t\tserviceLabware.listUser({ isAll: 1 }).then(res => {\r\n\t\t\tsetLabware(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n\t\t})\r\n\t\tserviceLifeScience.list({ isAll: 1 }).then(res => {\r\n\t\t\tsetLifeScience(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n\t\t})\r\n\t\tserviceLabInstrument.listUser({ isAll: 1 }).then(res => {\r\n\t\t\tsetLabInstrument(res.data.map(v => ({ label: v.name, value: v._id, parentId: v.parentId })))\r\n\t\t})\r\n\t}, [qData.page, qData.limit]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>Product List</Typography.Title> : null}\r\n\t\t\t<Table\r\n\t\t\t\t{...tableProps}\r\n\t\t\t\tpagination={{ position: ['none'], pageSize: qData.limit }}\r\n\t\t\t\tcolumns={tableColumns}\r\n\t\t\t\tdataSource={data.length ? data : []}\r\n\t\t\t\tscroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n\t\t\t/>\r\n\t\t\t<AddForm ref={addNewModalRef} {...{ list, parentId, brands, chemicals, gases, labware, lifeScience, labInstrument }} />\r\n\t\t\t<AddLabel ref={addNewLabelRef} {...{ list }} />\r\n\t\t</>\r\n\t);\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\treturn (\r\n\t\t<Form onSubmitCapture={list} className=\"search-form\">\r\n\t\t\t<Row gutter={[12, 2]}>\r\n\t\t\t\t<Col span={4}>\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t<Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={3}>\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={5}>\r\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n\t\t\t\t\t\t<Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tselected.length\r\n\t\t\t\t\t\t\t? <Popconfirm\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure to delete these selected data ?\"\r\n\t\t\t\t\t\t\t\tonConfirm={() => { deleteData(selected); }}\r\n\t\t\t\t\t\t\t\tokText=\"Yes\"\r\n\t\t\t\t\t\t\t\tcancelText=\"No\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n\tconst { list, parentId, brands, chemicals, gases, labware, lifeScience, labInstrument } = props;\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [data, setData] = useState({ aspect: 1 });\r\n\tconst [ajxRequesting, setAjxRequesting] = useState(false);\r\n\tconst [thumbFile, setThumbFile] = useState([]);\r\n\tconst [file, setFile] = useState([]);\r\n\r\n\r\n\r\n\tconst handleChange = (value) => {\r\n\t\tsetData({ ...data, ...value });\r\n\t}\r\n\tuseImperativeHandle(ref, () => ({\r\n\t\topenForm(dt) {\r\n\t\t\tsetOpen(true);\r\n\t\t\tsetData(\r\n\t\t\t\tdt\r\n\t\t\t\t\t? { _id: dt }\r\n\t\t\t\t\t: { parentId }\r\n\t\t\t);\r\n\t\t}\r\n\t}));\r\n\tconst getDetails = () => {\r\n\t\tsetAjxRequesting(true);\r\n\t\tservice.detailUser(data._id).then(res => {\r\n\t\t\tsetData(res.data || {});\r\n\t\t\tsetFile(res.data.imgs.length ? [...res.data.imgs] : [])\r\n\t\t\tsetThumbFile(res.data.thumbImg ? [res.data.thumbImg] : [])\r\n\t\t}).catch(err => {\r\n\t\t\tAntdMsg(err.message, 'error');\r\n\t\t}).finally(() => {\r\n\t\t\tsetAjxRequesting(false);\r\n\t\t});\r\n\t}\r\n\tconst save = () => {\r\n\t\tsetAjxRequesting(true);\r\n\t\tservice.saveUser(data).then((res) => {\r\n\t\t\tAntdMsg(res.message);\r\n\t\t\thandleChange({ ...res.data });\r\n\t\t\tlist();\r\n\t\t\tsetOpen(false);\r\n\t\t}).catch(err => {\r\n\t\t\tif (typeof err.message === 'object') {\r\n\t\t\t\tlet dt = err.message[Object.keys(err.message)[0]];\r\n\t\t\t\tAntdMsg(dt, 'error');\r\n\t\t\t} else {\r\n\t\t\t\tAntdMsg(err.message, 'error');\r\n\t\t\t}\r\n\t\t}).finally(() => {\r\n\t\t\tsetAjxRequesting(false);\r\n\t\t});\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tif (data._id) {\r\n\t\t\tgetDetails();\r\n\t\t}\r\n\t}, [data._id]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!data._id) {\r\n\t\t\thandleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n\t\t}\r\n\t}, [data.name]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!data._id) {\r\n\t\t\thandleChange({ slug: util.removeSpecialChars(data?.name || '') });\r\n\t\t}\r\n\t}, [data.name]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData({ ...data, thumbImg: thumbFile[0] })\r\n\t}, [thumbFile])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetData({ ...data, imgs: file })\r\n\t}, [file])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!open) {\r\n\t\t\tsetData({})\r\n\t\t}\r\n\t}, [open])\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('data.chemicalIds', data.chemicalIds);\r\n\t}, [data.chemicalIds])\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('data.gasIds', data.gasIds);\r\n\t}, [data.gasIds])\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={(!data._id ? 'Add New' : 'Edit') + ' Product'}\r\n\t\t\t\tstyle={{ top: 20 }}\r\n\t\t\t\topen={open}\r\n\t\t\t\tokText=\"Save\"\r\n\t\t\t\tonOk={save}\r\n\t\t\t\tokButtonProps={{ disabled: ajxRequesting }}\r\n\t\t\t\tonCancel={() => { setOpen(false); }}\r\n\t\t\t\tdestroyOnClose\r\n\t\t\t\tmaskClosable={false}\r\n\t\t\t\twidth={1000}\r\n\t\t\t\tclassName=\"app-modal-body\"\r\n\t\t\t\tfooter={[\r\n\t\t\t\t\t<Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n\t\t\t\t\t<Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t<Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n\t\t\t\t\t<Form layout=\"vertical\">\r\n\t\t\t\t\t\t<Row gutter={[12, 2]}>\r\n\t\t\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t\t\t<Form.Item label=\"Row Number\" required>\r\n\t\t\t\t\t\t\t\t\t<Input placeholder=\"Row Numbe\" value={data.row} onChange={e => { handleChange({ row: e.target.value }) }} />\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col span={24}></Col>\r\n\t\t\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t\t\t<Form.Item label=\"Choose Type\" required>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Type...\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={v => { handleChange({ type: v }) }}\r\n\t\t\t\t\t\t\t\t\t\tvalue={data.type}\r\n\t\t\t\t\t\t\t\t\t\toptionLabelProp=\"label\"\r\n\t\t\t\t\t\t\t\t\t\tallowClear={true}\r\n\t\t\t\t\t\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'brands',\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Brand'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'chemicals',\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Chemical'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'life-science',\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Life Science'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'lab-instruments',\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Lab Instruments'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'lab-ware',\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Lab Ware'\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 'gases',\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: 'Gases'\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col span={18}>\r\n\t\t\t\t\t\t\t\t<Form.Item label=\"Choose Menu\" required>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Menu...\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={v => { handleChange({ menuId: v }) }}\r\n\t\t\t\t\t\t\t\t\t\tvalue={data.menuId}\r\n\t\t\t\t\t\t\t\t\t\toptionLabelProp=\"label\"\r\n\t\t\t\t\t\t\t\t\t\tallowClear={true}\r\n\t\t\t\t\t\t\t\t\t\toptions={\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tdata.type === 'brands'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? brands\r\n\t\t\t\t\t\t\t\t\t\t\t\t: data.type === 'chemicals'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? chemicals\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: data.type === 'lab-ware'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? labware : data.type === \"life-science\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? lifeScience : data.type === \"gases\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? gases : data.type === \"lab-instruments\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? labInstrument : []\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Spin>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [data, setData] = useState({ aspect: 1 });\r\n\t// const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\tuseImperativeHandle(ref, () => ({\r\n\t\topenForm(dt) {\r\n\t\t\tsetOpen(true);\r\n\t\t\tsetData({ ...dt });\r\n\t\t}\r\n\t}));\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle={(!data._id ? 'Add User' : 'Variants' + \" of \" + `${(data.name)}`)}\r\n\t\t\t\tstyle={{ top: 20 }}\r\n\t\t\t\topen={open}\r\n\t\t\t\tokText=\"Save\"\r\n\t\t\t\t// onOk={save}\r\n\t\t\t\t// okButtonProps={{ disabled: ajxRequesting }}\r\n\t\t\t\tonCancel={() => { setOpen(false); }}\r\n\t\t\t\tdestroyOnClose\r\n\t\t\t\tmaskClosable={false}\r\n\t\t\t\twidth={1200}\r\n\t\t\t\tclassName=\"app-modal-body\"\r\n\t\t\t// footer={[\r\n\t\t\t//     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n\t\t\t//     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n\t\t\t// ]}\r\n\t\t\t>\r\n\t\t\t\t<Varient productId={data._id} />\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n});","import { DashboardOutlined, BankOutlined, ApartmentOutlined, CalendarOutlined } from '@ant-design/icons';\r\n\r\nimport Dashboard from '../pages/Dashboard';\r\nimport Application from \"../pages/Application\"\r\nimport UserManagement from '../pages/management/userManagement';\r\nimport Profile from '../pages/admin/Profile';\r\nimport ChangePassword from '../pages/admin/Change-password';\r\nimport LabInstrument from '../pages/master/LabInstrument';\r\nimport Gases from '../pages/master/Gases';\r\nimport LabWare from '../pages/master/labWare';\r\nimport Brand from '../pages/master/Brand';\r\nimport Chemicles from '../pages/master/Chemicals';\r\nimport LifeScience from '../pages/master/LifeScience';\r\nimport Product from '../pages/Product/Product';\r\nimport Blogs from '../pages/Blog/Blogs';\r\nimport Banner from '../pages/Banner';\r\nimport Jobs from '../pages/Jobs/Jobs';\r\nimport HomeProduct from '../pages/HomeProduct';\r\n\r\n\r\nconst routes = [\r\n    {\r\n        title: 'Career', icon: BankOutlined, url: '/career', children: [\r\n            { title: 'Job', icon: ApartmentOutlined, url: '/', component: Jobs },\r\n            { title: 'Job Application', icon: ApartmentOutlined, url: '/jobs', component: Jobs },\r\n        ]\r\n    },\r\n    { title: 'Add New Product', icon: BankOutlined, url: '/product', component: Product },\r\n    { title: 'Dashboard', icon: DashboardOutlined, url: '/', component: Dashboard },\r\n    { title: 'Blog', icon: DashboardOutlined, url: '/blogs', component: Blogs },\r\n    { title: 'Banner', icon: ApartmentOutlined, url: '/banner', component: Banner },\r\n\r\n    {\r\n        title: 'Master', icon: BankOutlined, url: '/master-new', children: [\r\n            { title: 'Brand', icon: ApartmentOutlined, url: '/', component: Brand },\r\n            { title: 'Chemicals', icon: ApartmentOutlined, url: '/chemicals', component: Chemicles },\r\n            { title: 'Life-Science', icon: ApartmentOutlined, url: '/lifescience', component: LifeScience },\r\n            { title: 'Lab Instrument', icon: ApartmentOutlined, url: '/lab-instrument', component: LabInstrument },\r\n            { title: 'Lab Ware', icon: ApartmentOutlined, url: '/lab-ware', component: LabWare },\r\n            { title: 'Gases', icon: ApartmentOutlined, url: '/gases', component: Gases },\r\n        ]\r\n    },\r\n    {\r\n        title: 'Management', icon: BankOutlined, url: '/management', children: [\r\n            { title: 'User', icon: ApartmentOutlined, url: '/', component: UserManagement },\r\n        ]\r\n    },\r\n    { title: 'Application', icon: CalendarOutlined, url: '/application', component: Application },\r\n    {\r\n        title: 'You', icon: ApartmentOutlined, url: '/profile', children: [\r\n            { title: 'Profile', icon: ApartmentOutlined, url: '/', component: Profile },\r\n            { title: 'Change Password', icon: ApartmentOutlined, url: '/change-password', component: ChangePassword },\r\n        ]\r\n    },\r\n    {\r\n        title: 'Home Page', icon: BankOutlined, url: '/product-new', children: [\r\n            { title: 'Product', icon: ApartmentOutlined, url: '/', component: HomeProduct },\r\n\r\n        ]\r\n    },\r\n].filter(v => (!v.hidden) || v.children?.length);\r\n\r\nexport default routes;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Form, Spin, Row, Col , Typography, Divider, Switch } from 'antd';\r\nimport { PageHeader } from '@ant-design/pro-layout'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport greetingTime from 'greeting-time';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport service from '../../../services/admin';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport UploadImage from '../../../utils/UploadImage';\r\n\r\nexport default function Profile() {\r\n\r\n    const [data, setData] = useState({});\r\n    const [fileList, setFileList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [doSave, setDoSave] = useState(false);\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.profile().then(res => {\r\n            setData(res.data.result || {});\r\n            if (res.data.result?.avatar) {\r\n                setFileList([res.data.result?.avatar]);\r\n            }\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateProfile();\r\n    }, [data]);\r\n\r\n    function updateProfile() {\r\n        if (doSave) {\r\n            setLoading(true);\r\n            service.saveProfile(data).then(res => {\r\n                AntdMsg(res.message);\r\n            }).catch(err => {\r\n                AntdMsg(err.message, 'error');\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleChange(fileList?.[0], 'avatar');\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <PageHeader \r\n                    title={greetingTime(new Date()) + ', ' + data?.name}\r\n                    extra={[<Switch key={'do-save'} checkedChildren=\"Update\" unCheckedChildren=\"Update\" checked={doSave} onChange={v => { setDoSave(v) }} />]}\r\n                />\r\n                <Divider />\r\n                <Form layout=\"vertical\">\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={16}>\r\n                            <Row gutter={[12, 10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'name'); } }} level={5} >\r\n                                            {data.name}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">User Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'userName'); } }} level={5} >\r\n                                            {data.userName}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Email</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'email'); } }} level={5} >\r\n                                            {data.email}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Phone Number</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'phone'); } }} level={5} >\r\n                                            {data.phone}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <UploadImage {...{ fileList, setFileList }} disabled={!doSave} cropImage />\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Spin>\r\n        </>\r\n    );\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Form, Spin, Row, Col, Divider, Input, Button } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport greetingTime from 'greeting-time';\r\nimport { PageHeader } from '@ant-design/pro-layout'\r\n\r\nimport React, { useState } from 'react';\r\nimport service from '../../../services/admin';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\n\r\nexport default function ChangePassword() {\r\n\r\n    const [data, setData] = useState({name: commonObj.name});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    function save() {\r\n        setLoading(true);\r\n        service.updatePassword(data).then(res => {\r\n            AntdMsg(res.message);\r\n            setData({});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <PageHeader title={greetingTime(new Date()) + ', ' + data?.name} />\r\n                <Divider />\r\n                <Form layout=\"vertical\">\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={8}>\r\n                            <Form.Item label=\"Current Password\">\r\n                                <Input.Password placeholder=\"Current Password\" value={data.currentPassword} onChange={e => { handleChange(e.target.value, 'currentPassword'); }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}></Col>\r\n\r\n                        <Col span={8}>\r\n                            <Form.Item label=\"New Password\">\r\n                                <Input.Password placeholder=\"New Password\" value={data.newPassword} onChange={e => { handleChange(e.target.value, 'newPassword'); }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}></Col>\r\n                        <Col span={8}>\r\n                            <Form.Item label=\"Confirm New Password\">\r\n                                <Input.Password placeholder=\"Confirm New Password\" value={data.confirmNewPassword} onChange={e => { handleChange(e.target.value, 'confirmNewPassword'); }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}></Col>\r\n                        <Col span={8}>\r\n                            <Form.Item>\r\n                                {\r\n                                    data.currentPassword && data.newPassword && data.confirmNewPassword\r\n                                        ? <Button type=\"primary\" style={{ width: '100%' }} htmlType=\"submit\" onClick={save} >Update Password</Button>\r\n                                        : null\r\n                                }\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Spin>\r\n        </>\r\n    );\r\n};","import { Menu } from 'antd';\r\nimport React from 'react';\r\nimport routes from './route';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { LogoutOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst items = [...routes];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach((v, i) => {\r\n        if (v.children?.length) {\r\n            arr[i] = {\r\n                ...arr[i],\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            arr[i] = {\r\n                ...v,\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle(items);\r\n\r\nitems.push(\r\n    {\r\n        label: 'Logout',\r\n        icon: <LogoutOutlined />,\r\n        key: 'logout',\r\n        style: { color: 'red' },\r\n        onClick: () => { window.localStorage.clear(); window.location.reload(); },\r\n        component: <></>\r\n    }\r\n);\r\n\r\nconst App = () => {\r\n    const paths = [];\r\n    useLocation().pathname.split('/')?.reduce((prev, cur) => {\r\n        paths.push(prev + '/' + cur);\r\n        return prev + '/' + cur;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <Menu\r\n                    defaultSelectedKeys={[paths.pop()]}\r\n                    defaultOpenKeys={[...paths]}\r\n                    mode=\"horizontal\"\r\n                    theme=\"dark\"\r\n                    items={items}\r\n                // style={{ height: '100vh' }}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Card, Layout } from \"antd\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Menu from \"./Menu\";\r\nimport routes from \"./route\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\n\r\n\r\nconst newRoutes = [];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach(v => {\r\n        if (v.children) {\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            newRoutes.push({ ...v, url: prevBaseUrl + v.url })\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle([...routes]);\r\n\r\n\r\nexport default function MyLayout() {\r\n    const [collapsed, setCollapsed] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                {/* <Layout.Sider\r\n                    width={250}\r\n                    collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}\r\n                    style={{\r\n                        overflow: 'auto',\r\n                        height: '100vh',\r\n                        position: 'fixed',\r\n                        left: 0,\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        maxWidth: '300px!important',\r\n                        width: '300px!important'\r\n                    }}\r\n                >\r\n                    <div className=\"logo\" />\r\n                    <Menu />\r\n                </Layout.Sider>routes */}\r\n                <Layout className=\"site-layout\">\r\n                    {/* <Top /> */}\r\n                    <Menu />\r\n\r\n\r\n                    <Layout.Content\r\n                        style={{\r\n                            margin: '24px 40px 0 40px',\r\n                            // overflow: 'initial',\r\n                            // marginLeft: !collapsed ? '230px' : '60px'\r\n                        }}\r\n                    >\r\n                        {/* <Breadcrumb /> */}\r\n                        <Card bordered>\r\n                            <Routes>\r\n                                {newRoutes.filter(v => v.key !== 'logout').map((v) => <Route path={v.url} key={v.url} element={<v.component />} />)}\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["style","textAlign","service","data","axios","this","baseURL","type","params","query","console","log","id","ids","TinyMce","props","height","menubar","plugins","toolbar","content_style","initialValue","onChange","editorRef","useRef","onInit","evt","editor","current","init","file_browser_callback_types","file_picker_callback","cb","value","meta","input","document","createElement","setAttribute","onchange","file","files","reader","FileReader","readAsDataURL","onload","result","title","name","click","deprecation_warnings","onSelectionChange","getContent","Aboutus","handleChange","layout","gutter","span","label","required","v","TandC","FAQ","Contactus","useState","editableStr","setEditableStr","a","setA","b","setB","width","padding","map","marginTop","editable","onClick","pre","placeholder","address","e","target","PrivacyPolicy","url","config","UploadImage","fileList","setFileList","count","cropImage","disabled","listType","uploadImage","options","onSuccess","onError","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","total","append","fileService","then","res","uid","err","handleOnChange","fl","handleRemove","aspect","shape","quality","rotate","accept","customRequest","onRemove","className","length","MyPagination","qData","setQData","showTotal","start","page","limit","end","pageSize","pp","showSizeChanger","Address","parentId","setData","loading","setLoading","selected","setSelected","fileType","addNewModalRef","addSubNewModalRef","columns","render","row","i","dataIndex","openForm","isActive","color","onConfirm","deleteData","_id","okText","cancelText","size","danger","icon","EditOutlined","filter","item","hidden","list","key","extra","catch","finally","AntdMsg","message","tableColumns","ellipsis","fixed","tableProps","bordered","showHeader","footer","rowSelection","selectedRowKeys","tableLayout","undefined","useEffect","level","pagination","position","dataSource","scroll","y","x","ref","Search","onSubmitCapture","marginBottom","allowClear","htmlType","float","AddForm","forwardRef","open","setOpen","ajxRequesting","setAjxRequesting","useImperativeHandle","dt","save","Object","keys","slug","util","top","onOk","okButtonProps","onCancel","destroyOnClose","maskClosable","spinning","indicator","fontSize","spin","status","entries","forEach","ent","varDt","k","split","parseInt","UserService","avatar","email","phone","ModelModal","userId","LabInstrument","addNewLabelRef","AddLabel","Gases","LabWare","Chemicals","NewForm","Lifescience","Varient","productId","cateId","inventory","strile","unite","volume","brands","chemicals","gases","labware","labinstrument","lifescience","thumbFile","setThumbFile","setFile","imgs","thumbImg","brandId","optionLabelProp","orientation","mode","chemicalIds","find","ch","includes","slice","gasIds","gs","labwareIds","labInstrumentIds","lifeScienceIds","startingPrice","description","metaTitle","metaTag","metaDescription","img","imgUrl","priority","Jobs","skill","location","experience","lifeScience","labInstrument","menuId","routes","BankOutlined","children","ApartmentOutlined","component","setBrands","setChemicals","setGases","setLabware","setLifescience","setLabinstrument","serviceBrand","isAll","serviceChemical","serviceGases","serviceLabware","serviceLabinstrument","serviceLifescience","DashboardOutlined","Dashboard","reverse","src","moment","format","_","Chemicles","LifeScience","ModelModalRef","CalendarOutlined","currentTab","setCurrentTab","changeForm","getDetails","activeKey","items","borderTop","display","flexDirection","paddingTop","paddingRight","doSave","setDoSave","PageHeader","greetingTime","Date","checkedChildren","unCheckedChildren","checked","strong","editing","triggerType","margin","userName","commonObj","currentPassword","newPassword","confirmNewPassword","setLifeScience","setLabInstrument","serviceLifeScience","serviceLabInstrument","convertMultiToSingle","arr","prevBaseUrl","to","push","LogoutOutlined","window","localStorage","clear","reload","paths","useLocation","pathname","reduce","prev","cur","defaultSelectedKeys","pop","defaultOpenKeys","theme","Error404","subTitle","newRoutes","MyLayout","minHeight","Menu","path","element"],"sourceRoot":""}