{"version":3,"file":"static/js/751.4d20887b.chunk.js","mappings":"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","sources":["views/pages/Dashboard.js","services/setting.js","utils/TinyMce.js","views/pages/Setting.js","services/service.js","services/file.js","utils/UploadImage.js","views/components/Pagination.js","views/pages/Service.js","services/worker.js","services/workhistory.js","views/pages/WorkHistory.js","services/account.js","views/pages/management/workerManagement.js","services/user.js","services/address.js","views/pages/management/address.js","views/pages/management/userManagement.js","services/leave.js","views/pages/Leave.js","services/master.js","views/pages/master/LabInstrument.js","services/gas.js","views/pages/master/Gases.js","services/labware.js","views/pages/master/labWare.js","services/brand.js","views/pages/master/Brand.js","services/chemicals.js","views/pages/master/Chemicals.js","services/lifescience.js","views/pages/master/LifeScience.js","views/layout/route.js","views/pages/admin/Profile.js","views/pages/admin/Change-password.js","views/layout/Menu.js","views/pages/errors/Error404.js","views/layout/Layout.js"],"sourcesContent":["const App = () => {\r\n    return (\r\n        <>\r\n            <h2 style={{textAlign: 'center'}}>Dashboard Coming Soon...</h2>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'setting';\r\n\r\n    static detail(data) {\r\n        return axios.get(this.baseURL + '/details', { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","import React, { useRef } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\n\r\nexport default function TinyMce(props) {\r\n    let { height = 400, menubar = false, plugins, toolbar, content_style, initialValue, onChange } = props;\r\n    if (!plugins) {\r\n        plugins = [\r\n            'advlist autolink lists link image charmap print preview anchor',\r\n            'searchreplace visualblocks code fullscreen',\r\n            'insertdatetime media table paste code help wordcount forecolor backcolor textcolor',\r\n            'image paste table code'\r\n        ];\r\n    }\r\n    if (!toolbar) {\r\n        toolbar = 'undo redo | formatselect | bold italic backcolor | forecolor emoticons'\r\n            + '| table tabledelete | tableprops tablerowprops tablecellprops'\r\n            + '| alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help | image link | imageupload | code | fullscreen';\r\n        // toolbar = 'undo redo | insert | styleselect | bold italic | fontselect fontsizeselect | alignleft aligncenter alignright alignjustify | forecolor backcolor emoticons | bullist numlist outdent indent | link unlink | image responsivefilemanager table | removeformat code help | fullscreen'\r\n    }\r\n    if (!content_style) {\r\n        content_style = 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }';\r\n    }\r\n\r\n    const editorRef = useRef(null);\r\n    const editorContent = () => {\r\n        if (editorRef.current) {\r\n            onChange(editorRef.current.getContent())\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Editor\r\n                onInit={(evt, editor) => editorRef.current = editor}\r\n                {...{ initialValue }}\r\n                init={{\r\n                    height, menubar, plugins, toolbar, content_style,\r\n\r\n                    file_browser_callback_types: 'image',\r\n                    file_picker_callback: function (cb, value, meta) {\r\n                        const input = document.createElement(\"input\");\r\n                        input.setAttribute(\"type\", \"file\");\r\n                        input.setAttribute(\"accept\", \"image/*\");\r\n                        input.onchange = function () {\r\n                            const file = this.files[0];\r\n                            const reader = new FileReader();\r\n                            reader.readAsDataURL(file);\r\n                            reader.onload = () => { cb(reader.result, { title: file.name }); };\r\n                        };\r\n                        input.click();\r\n                    },\r\n                    deprecation_warnings: false\r\n                }}\r\n                onSelectionChange={editorContent}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, DatePicker, Divider } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/setting';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport TinyMce from \"../../utils/TinyMce\"\r\n\r\nexport default function Setting() {\r\n\r\n    // const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [currentTab, setCurrentTab] = useState(0);\r\n\r\n    // const handleChange = (value) => {\r\n    //     Object.entries(value).forEach(ent => {\r\n    //         let varDt = data;\r\n    //         const k = ent[0];\r\n    //         const v = ent[1];\r\n    //         let keys = k.split('.');\r\n    //         for (let i = 0; i < keys.length; i++) {\r\n    //             if (i + 1 === keys.length) {\r\n    //                 varDt[keys[i]] = v;\r\n    //             } else {\r\n    //                 if (typeof varDt[keys[i]] === 'undefined') {\r\n    //                     if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n    //                         varDt[keys[i]] = [];\r\n    //                     } else {\r\n    //                         varDt[keys[i]] = {};\r\n    //                     }\r\n    //                 } varDt = varDt[keys[i]];\r\n    //             }\r\n    //         }\r\n    //     });\r\n    //     setData({ ...data });\r\n    // }\r\n\r\n    const handleChange = (value, changeForm) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        try {\r\n            (() => {\r\n                return currentTab === 0 ? service.save({ ...data, type: 'aboutus', data: data.data }) :\r\n                    currentTab === 1 ? service.save({ ...data, type: 'termcondition', data: data.data }) :\r\n                        currentTab === 2 ? service.save({ ...data, type: 'faq', data: data.data }) :\r\n                            currentTab === 3 ? service.save({ ...data, type: 'contactus', data: data.data }) :\r\n                                currentTab === 4 ? service.save({ ...data, type: 'privacy-policy', data: data.data }) : null\r\n\r\n            })().then(res => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                setCurrentTab((currentTab + 1) % 5);\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        } catch (err) {\r\n            AntdMsg(err.message, 'error');\r\n        }\r\n    }\r\n\r\n    const getDetails = (type) => {\r\n        setAjxRequesting(true);\r\n        service.detail(type).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentTab === 0) {\r\n            getDetails({ _id: data._id, type: \"aboutus\" });\r\n        } else if (currentTab === 1) {\r\n            getDetails({ _id: data._id, type: \"termcondition\" });\r\n        } else if (currentTab === 2) {\r\n            getDetails({ _id: data._id, type: \"faq\" });\r\n        } else if (currentTab === 3) {\r\n            getDetails({ _id: data._id, type: \"contactus\" });\r\n        } else if (currentTab === 4) {\r\n            getDetails({ _id: data._id, type: \"privacy-policy\" });\r\n        }\r\n    }, [currentTab])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\r\n                    items={[\r\n                        {\r\n                            label: \"About us\",\r\n                            key: 0,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <Aboutus {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Terms & Condition\",\r\n                            key: 1,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <TandC {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"FAQ\",\r\n                            key: 2,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <FAQ {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Contact us\",\r\n                            key: 3,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <Contactus {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Privacy Policy\",\r\n                            key: 4,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <PrivacyPolicy {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        }\r\n                    ]}\r\n                />\r\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\", paddingTop: \"5px\", paddingRight: \"70px\" }}>\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 4 ? \"Save\" : \"Next\"}</Button>\r\n                </div>\r\n            </Spin>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, data }) {\r\n\r\n    const [modelNames, setModelNames] = useState([])\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined) {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const models = data?.map((item) => (\r\n            {\r\n                label: item.modelName,\r\n                value: item.modelId,\r\n            }\r\n\r\n        ))\r\n        setModelNames(models)\r\n\r\n    }, [data])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                {/*<Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select value={data.fuelType} onChange={(v) => onChange(v, \"fuelType\")} placeholder=\"Select by Fuel type\" allowClear>\r\n                            <Select.Option value=\"Diesel\" >Diesel</Select.Option>\r\n                            <Select.Option value=\"Petrol\" >Petrol</Select.Option>\r\n                            <Select.Option value=\"Petrol + CNG\" >Petrol + CNG</Select.Option>\r\n                            <Select.Option value=\"Petrol + LPG\" >Petrol + LPG</Select.Option>\r\n                            <Select.Option value=\"Electric\" >Electric</Select.Option>\r\n                            <Select.Option value=\"Hybrid\" >Hybrid</Select.Option>\r\n                        </Select>\r\n\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select\r\n                            showSearch\r\n                            allowClear\r\n                            placeholder=\"Select by Model Name\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={(v) => onChange(v, \"modelId\")}\r\n                            filterOption={(input, option) =>\r\n                                (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\r\n                            }\r\n                            options={modelNames}\r\n                        />\r\n\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                        </Col>*/}\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected dealer?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [currentTab, setCurrentTab] = useState(0);\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        try {\r\n            (() => {\r\n                return currentTab === 0 ? service.save({ type: 'aboutus', data: data.data }) :\r\n                    currentTab === 1 ? service.save({ type: 'termcondition', data: data.data }) :\r\n                        currentTab === 2 ? service.save({ type: 'faq', data: data.data }) :\r\n                            currentTab === 3 ? service.save({ type: 'contactus', data: data.data }) :\r\n                                currentTab === 4 ? service.save({ type: 'privacy-policy', data: data.data }) : null\r\n\r\n            })().then(res => {\r\n                AntdMsg(res.message);\r\n                handleChange({ ...res.data });\r\n                setCurrentTab((currentTab + 1) % 5);\r\n                list();\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        } catch (err) {\r\n            AntdMsg(err.message, 'error');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [currentTab, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setCurrentTab(0);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        console.log(data)\r\n        if (data.type === \"aboutus\") {\r\n            setCurrentTab(0)\r\n        } else if (data.type === \"termcondition\") {\r\n            setCurrentTab(1)\r\n        } else if (data.type === \"faq\") {\r\n            setCurrentTab(2)\r\n        } else if (currentTab === 3) {\r\n            data.type = \"contactus\"\r\n        } else if (currentTab === 4) {\r\n            data.type = \"privacy-policy\"\r\n        }\r\n    }, [currentTab])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Data'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 4 ? \"Save\" : \"Next\"}</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\r\n                        items={[\r\n                            {\r\n                                label: \"About us\",\r\n                                key: 0,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <Aboutus {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                                disabled: data.type === \"aboutus\"\r\n                            },\r\n                            {\r\n                                label: \"Terms & Condition\",\r\n                                key: 1,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <TandC {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"FAQ\",\r\n                                key: 2,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <FAQ {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"Contact us\",\r\n                                key: 3,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <Contactus {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                            },\r\n                            {\r\n                                label: \"Privacy Policy\",\r\n                                key: 4,\r\n                                children: <Card style={{ borderTop: 0 }}>\r\n                                    <PrivacyPolicy {...{ data, handleChange, save }} />\r\n                                </Card>,\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Spin>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst Aboutus = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TandC = ({ data, handleChange }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst FAQ = ({ data, handleChange }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Contactus = ({ data, handleChange }) => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]} style={{ width: \"100%\", padding: \"0 5px\" }}>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Email\" required>\r\n                            <Input type=\"email\" placeholder=\"johndoe123@gmail.com\" value={data.data?.email} onChange={e => { handleChange({ data: { ...data.data, email: e.target.value } }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"Phone Number\" required>\r\n                            <Input placeholder=\"995412XXX\" value={data.data?.number} onChange={e => { handleChange({ data: { ...data.data, number: e.target.value } }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item label=\"Address\" required>\r\n                            <Input placeholder=\"Street No: 9, Delhi: 110054\" value={data.data?.address} onChange={e => { handleChange({ data: { ...data.data, address: e.target.value } }) }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\nconst PrivacyPolicy = ({ data, handleChange }) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'service';\r\n\r\n    static detailService(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static listService(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveService(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteService(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'file';\r\n\r\n    static get(url) {\r\n        return axios.get(\"../\"+  url);\r\n    }\r\n\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static remove(data) {\r\n        return axios.post(this.baseURL + \"/remove\", data);\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload } from \"antd\";\r\nimport ImgCrop from 'antd-img-crop';\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\n\r\nexport default function UploadImage({ fileList, setFileList, count = 1, cropImage = null, disabled = false, listType = \"picture-card\" }) {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\r\n        })\r\n    };\r\n\r\n    if (cropImage) {\r\n        if (typeof cropImage !== typeof {}) {\r\n            cropImage = {};\r\n        }\r\n        cropImage.aspect = cropImage.aspect || 1;\r\n        cropImage.shape = cropImage.shape || 'rect';\r\n        cropImage.quality = cropImage.quality || 1;\r\n        return (\r\n            <ImgCrop rotate aspect shape={cropImage.shape} quality={cropImage.quality} >\r\n                <Upload\r\n                    accept=\"image/*\"\r\n                    customRequest={uploadImage}\r\n                    onChange={handleOnChange}\r\n                    onRemove={handleRemove}\r\n                    listType={listType}\r\n                    fileList={fileList}\r\n                    className=\"image-upload-grid\"\r\n                    disabled={disabled}\r\n                >\r\n                    {fileList?.length >= count ? null : <div>Upload</div>}\r\n                </Upload>\r\n            </ImgCrop>\r\n        );\r\n    } else {\r\n        return <Upload\r\n            accept=\"image/*\"\r\n            customRequest={uploadImage}\r\n            onChange={handleOnChange}\r\n            onRemove={handleRemove}\r\n            listType={listType}\r\n            fileList={fileList}\r\n            className=\"image-upload-grid\"\r\n            disabled={disabled}\r\n        >\r\n            {fileList?.length >= count ? null : <div>Upload</div>}\r\n        </Upload>\r\n    }\r\n\r\n};","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/service';\r\n\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport commonObj from '../../commonObj';\r\n\r\nconst viewAccess = true;\r\nconst addAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('add');\r\nconst editAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('edit');\r\nconst deleteAccess = commonObj.userType === 'superAdmin' || commonObj.modules?.includes('delete');\r\n\r\nexport default function Service() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Icon',\r\n            dataIndex: 'file',\r\n            width: 50,\r\n            render: (v) => {\r\n                return <Image src={v?.url} height={30} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Per Hour Rate',\r\n            dataIndex: 'per_hr_rate',\r\n            width: 120,\r\n            render: (v) => <b> ₹ {v} </b>\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            Services.listService(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteService(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     if (viewAccess) {\r\n    //         userService.list({ isAll: 1 }).then(res => { setUsers(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n    //     }\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Services</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        Services.detailService(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.file ? [res.data?.file] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveService(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Services'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Per Hour Rate\" required>\r\n                                    <Input placeholder=\"Per Hour Rate\" type='number' value={data.per_hr_rate} onChange={e => { handleChange({ per_hr_rate: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Icon\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} listType=\"picture\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'worker';\r\n\r\n    static detailWorker(id, data) {\r\n        return axios.get(this.baseURL + '/details-worker/' + id, { params: data });\r\n    }\r\n    static listWorker(data) {\r\n        return axios.get(this.baseURL + '/list-worker', { params: data });\r\n    }\r\n    static saveWorker(data, query) {\r\n        return axios.post(this.baseURL + \"/save-worker\", data, { params: query });\r\n    }\r\n    static deleteWorker(id) {\r\n        return axios.post(this.baseURL + '/delete-worker', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'workhistory';\r\n\r\n    static listWorkHistory(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, DatePicker, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport WorkHistoryService from '../../services/workhistory';\r\nimport Pagination from '../components/Pagination';\r\nimport moment from \"moment\"\r\n\r\n\r\nconst viewAccess = true;\r\n\r\nexport default function WorkHistory({ workerId = null }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, workerId });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n\r\n        {\r\n            title: 'Costumer Name',\r\n            dataIndex: 'userServiceDetail',\r\n            render: (v) => v?.receiverName\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'userServiceDetail',\r\n            width: 100,\r\n            render: (v) => v?.phone\r\n        },\r\n        {\r\n            title: 'Login time',\r\n            dataIndex: 'login_time',\r\n            width: 170,\r\n            render: (v) => <span>{moment(v).format('DD MMM YYYY, h:mm a')}</span>\r\n        },\r\n        {\r\n            title: 'Logout time',\r\n            dataIndex: 'logout_time',\r\n            width: 170,\r\n            render: (v) => <span>{moment(v).format('DD MMM YYYY, h:mm a')}</span>\r\n        },\r\n        {\r\n            title: 'Duration',\r\n            dataIndex: 'duration',\r\n            width: 100,\r\n            render: (v) => <b>{v} min</b>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'userServiceDetail',\r\n            width: 100,\r\n            render: (v) => <Tag color='blue'>{v?.status}</Tag>\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            WorkHistoryService.listWorkHistory(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Worker History</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {/* <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    } */}\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class accountService {\r\n\r\n    static baseURL = 'account';\r\n\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    \r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, DatePicker, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport WorkerService from '../../../services/worker';\r\nimport Service from '../../../services/service';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\nimport WorkHistory from '../WorkHistory';\r\nimport accountService from '../../../services/account';\r\n\r\n\r\nexport default function WorkerManagement() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const ModelModalRef = useRef();\r\n    const accountModalRef = useRef();\r\n    const [service, setService] = useState([]);\r\n    const columns = [\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'userName',\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Service',\r\n            dataIndex: 'serviceDetail',\r\n            width: 150,\r\n            render: (v) => v?.name\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'permanentAddress',\r\n            width: 300,\r\n        },\r\n        {\r\n            title: 'WorkList',\r\n            dataIndex: '_id',\r\n            width: 80,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Button type=\"primary\" size='small' onClick={() => { ModelModalRef.current.openForm({ _id: row._id, userName: row.userName }) }} >Works</Button>\r\n                </>\r\n            }\r\n        },\r\n        {\r\n            title: 'Account',\r\n            dataIndex: '_id',\r\n            width: 80,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Button type=\"primary\" size='small' onClick={() => { accountModalRef.current.openForm({ _id: row._id, userName: row.userName }) }} >Account</Button>\r\n                </>\r\n            }\r\n        },\r\n        {\r\n            title: 'Rate Per Hour',\r\n            dataIndex: 'per_hr_rate',\r\n            width: 120,\r\n            render: (v) => <b> ₹ {v} </b>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Worker?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        WorkerService.listWorker(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    function listService() {\r\n        Service.listService()\r\n            .then(res => { setService(res.data || []); }).catch(err => { AntdMsg('Service data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        WorkerService.deleteWorker(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n        listService();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Workers</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, service }} />\r\n            <ModelModal ref={ModelModalRef} />\r\n            <AccountModal ref={accountModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined) {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Select\r\n                        placeholder=\"Please select...\"\r\n                        allowClear\r\n                        onChange={e => onChange(e, \"status\")}\r\n                        style={{\r\n                            width: '100%',\r\n                        }}\r\n                        options={\r\n                            [\r\n                                {\r\n                                    value: true,\r\n                                    label: \"Registerd\",\r\n                                },\r\n                                {\r\n                                    value: false,\r\n                                    label: \"Not Registerd\",\r\n                                }\r\n                            ]\r\n                        }\r\n                    />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, service } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n    const [aadharImg, setAadharImg] = useState([]);\r\n    const [nocImg, setNocImg] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        WorkerService.detailWorker(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n            setAadharImg(res.data?.aadharImage ? [res.data?.aadharImage] : []);\r\n            setNocImg(res.data?.nocImage ? [res.data?.nocImage] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        WorkerService.saveWorker(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false)\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ avatar: fileList?.[0] });\r\n        handleChange({ aadharImage: aadharImg?.[0] });\r\n        handleChange({ nocImage: nocImg?.[0] });\r\n    }, [fileList, aadharImg, nocImg]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Worker'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={20}>\r\n                                <Row gutter={[12, 2]}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Username\" required>\r\n                                            <Input placeholder=\"John Doe\" value={data.userName} onChange={e => { handleChange({ userName: e.target.value }) }} />\r\n\r\n                                            {/* <Input placeholder=\"John Doe\" value={data.userName} onChange={e => { handleChange(e.target.value, 'userName') }} /> */}\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Phone\" required>\r\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item label=\"Service\" required>\r\n                                            <Select\r\n                                                mode=\"multiple\"\r\n                                                value={data.serviceIds}\r\n                                                placeholder=\"Please select...\"\r\n                                                onChange={e => { handleChange({ serviceIds: e }) }}\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                }}\r\n                                                options={\r\n                                                    service.map(v => (\r\n                                                        {\r\n                                                            value: v._id,\r\n                                                            label: v.name,\r\n                                                        }\r\n                                                    ))\r\n                                                }\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Avatar\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Present Address\">\r\n                                    <Input.TextArea placeholder=\"Present Address\" value={data.presentAddress} onChange={e => { handleChange({ presentAddress: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Permanent Address\">\r\n                                    <Input.TextArea placeholder=\"Permanent Address\" value={data.permanentAddress} onChange={e => { handleChange({ permanentAddress: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Aadhar Image\">\r\n                                    <UploadImage {...{ fileList: aadharImg, setFileList: setAadharImg }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"NOC Image\">\r\n                                    <UploadImage {...{ fileList: nocImg, setFileList: setNocImg }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Per Hour Rate\" required>\r\n                                    <Input placeholder=\"Per Hour Rate\" value={data.per_hr_rate} onChange={e => { handleChange({ per_hr_rate: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst ModelModal = forwardRef((props, ref) => {\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All Works of <Typography.Text type=\"danger\">{data?.userName}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <WorkHistory {...{ workerId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\nconst AccountModal = forwardRef((props, ref) => {\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [modalData, setModalData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setModalData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        accountService.detail(modalData._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        accountService.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            setOpen(false)\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (modalData?._id) {\r\n            getDetails();\r\n        }\r\n    }, [modalData._id]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>Bank Account Details of:  <Typography.Text type=\"danger\">{modalData?.userName}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={700}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n\r\n                ]}\r\n            >\r\n                <Form layout=\"vertical\">\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={24}>\r\n                            <Row gutter={[12, 2]}>\r\n                                {/* <Col span={12}>\r\n                                    <Form.Item label=\"WorkerId\" required>\r\n                                        <Input value={data?.workerId || modalData?._id} disabled />\r\n                                    </Form.Item>\r\n            </Col/>*/}\r\n\r\n                                <Col span={24}>\r\n                                    <Form.Item label=\"Bank Name\" required>\r\n                                        <Input placeholder=\"Bank Of India\" value={data.bankName} onChange={e => { handleChange({ bankName: e.target.value }) }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Holder Name\">\r\n                                <Input placeholder=\"John Doe\" value={data.holderName} onChange={e => { handleChange({ holderName: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Account Number\">\r\n                                <Input placeholder=\"BOI1100XXX0564X\" value={data.accountNumber} onChange={e => { handleChange({ accountNumber: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"IFSC code\">\r\n                                <Input placeholder=\"Permanent Address\" value={data.IFSC} onChange={e => { handleChange({ IFSC: e.target.value }) }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Account Type\" required>\r\n                                <Select value={data.accountType} onChange={e => { handleChange({ accountType: e }) }} >\r\n                                    <Select.Option value={\"saving\"}>Saving</Select.Option>\r\n                                    <Select.Option value={\"current\"}>Current</Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/details-user/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/list-user', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/save-user\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/delete-user', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailJob(id, data) {\r\n        return axios.get(this.baseURL + '/address/details' + id, { params: data });\r\n    }\r\n    static listJob(data) {\r\n        return axios.get(this.baseURL + '/address/list', { params: data });\r\n    }\r\n    static saveJob(data, query) {\r\n        return axios.post(this.baseURL + '/address/save', data, { params: query });\r\n    }\r\n    static deleteJob(id) {\r\n        return axios.post(this.baseURL + '/address/delete', { ids: id });\r\n    }\r\n\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n//import service from '../../../services/chemicle';\r\nimport util from '../../../utils/util';\r\nimport service from '../../../services/address';\r\n\r\n\r\n\r\n\r\nexport default function Address({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addSubNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Lable',\r\n            dataIndex: 'lable',\r\n            width: 100,\r\n            render: (v, row) => {\r\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\r\n            }\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listJob(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteJob(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !parentId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailsjob(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveJob(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e.target.value }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport UserService from '../../../services/user';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport Address from './address';\r\nimport service from '../../../services/address';\r\n\r\n\r\nexport default function UserManagement() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n    const ModelModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Job',\r\n            dataIndex: '_id',\r\n            width: 80,\r\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { ModelModalRef.current.openForm({ _id: row._id, name: row.name }) }} >Address</Button>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: status => {\r\n                if (status == \"blocked\") {\r\n                    return <Tag color='red'>Blocked</Tag>\r\n                } else if (status == \"active\") {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color=\"yellow\">Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        UserService.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        UserService.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <ModelModal ref={ModelModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item>\r\n                        <Select value={qData.status} allowClear placeholder=\"Search By Status\" onChange={e => { setQData({...qData, status: e }) }} >\r\n                            <Select.Option value=\"active\">Active</Select.Option>\r\n                            <Select.Option value=\"inactive\">Inactive</Select.Option>\r\n                            <Select.Option value=\"blocked\">Blocked</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        UserService.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        UserService.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ avatar: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={20}>\r\n                                <Row gutter={[12, 2]}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Username\" required>\r\n                                            <Input placeholder=\"John Doe\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Email\" required>\r\n                                            <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange({ email: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Phone\" required>\r\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Avatar\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value=\"active\">Active</Select.Option>\r\n                                        <Select.Option value=\"inactive\">Inactive</Select.Option>\r\n                                        <Select.Option value=\"blocked\">Blocked</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst ModelModal = forwardRef((props, ref) => {\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All Job List of <Typography.Text type=\"danger\">{data?.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <Address {...{ userId: data._id }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'leave';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static detail(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static approve(id, data) {\r\n        return axios.post(this.baseURL + \"/approve/\" + id, data);\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image,  Tag,  Radio, Divider, DatePicker } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined,PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/leave';\r\nimport workerService from '../../services/worker';\r\nimport moment from \"moment\"\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\nconst viewAccess = true;\r\n\r\nexport default function Leave() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [worker, setWorker] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Worker Name',\r\n            dataIndex: 'workerDetail',\r\n        },\r\n        {\r\n            title: 'Reason',\r\n            dataIndex: 'reason',\r\n            width: 250,\r\n        },\r\n        {\r\n            title: 'Start Date',\r\n            dataIndex: 'startDate',\r\n            width: 150,\r\n            render: (v) => <span>{moment(v).format('DD MMM YYYY')}</span> \r\n        },\r\n        {\r\n            title: 'End Date',\r\n            dataIndex: 'endDate',\r\n            width: 150,\r\n            render: (v) => <span>{moment(v).format('DD MMM YYYY')}</span> \r\n        },\r\n        {\r\n            title: 'Prescription',\r\n            dataIndex: 'precipition',\r\n            width: 100,\r\n            render: (v) => <Image src={v?.url} height={32} />\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'isApproved',\r\n            width: 150,\r\n            render: (_, row) => {\r\n                if (row.status === \"Approved\") {\r\n                    return <Tag color='green'>Approved</Tag>\r\n                } else if (row.status === \"Rejected\") {\r\n                    return <Tag color='red'>Rejected</Tag>\r\n                }\r\n                else {\r\n                    return <Tag color='blue'>Requested</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        if (viewAccess) {\r\n            setLoading(true);\r\n            Services.list(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n    function workerlist() {\r\n        setLoading(true);\r\n        workerService.listWorker(qData).then(res => {\r\n            setWorker(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, isAll: 1 });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteService(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, workers: worker }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    useEffect(() => {\r\n        workerlist();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Leave Requests</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, workers }) {\r\n\r\n    const [userNames, setUserNames] = useState([]);\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined) {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const Names = workers?.map((item) => (\r\n            {\r\n                label: item.userName ? <><p style={{ padding: \"0px\", margin: \"0px\" }}>{item.userName}</p><p style={{ fontSize: \"12px\", margin: \"0px\" }}><Typography.Text type=\"danger\">@{item.phone}</Typography.Text></p></> : item.phone,\r\n                value: item.userName ? item.userName : item.phone,\r\n                searchKey: item.userName + item.phone\r\n            }\r\n        ))\r\n        setUserNames(Names)\r\n    }, [workers])\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select\r\n                            showSearch\r\n                            allowClear\r\n                            placeholder=\"Select by username / phone\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={(e) => onChange(e, \"userName\")}\r\n                            filterOption={(input, option) =>\r\n                                (option?.searchKey ?? '').toLowerCase().includes(input.toLowerCase())\r\n                            }\r\n                            options={userNames}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Select\r\n                            placeholder=\"Select Type...\"\r\n                            onChange={(v) => onChange(v, 'status')}\r\n                            allowClear\r\n                            options={[\r\n                                {\r\n                                    value: \"Approved\",\r\n                                    label: 'Approved',\r\n                                },\r\n                                {\r\n                                    value: \"Rejected\",\r\n                                    label: 'Rejected',\r\n                                },\r\n                                {\r\n                                    value: \"Requested\",\r\n                                    label: 'Requested',\r\n                                },\r\n\r\n                            ]}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <DatePicker.RangePicker\r\n                            style={{ width: '100%' }}\r\n                            onChange={v => onChange(v, 'DateKey')} allowClear\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        Services.detail(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.file ? [res.data?.file] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.approve(data._id, data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Leave'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={6}>\r\n                                <Divider orientation=\"left\">Leave Application Status</Divider>\r\n                                <Radio.Group onChange={(e) => handleChange({ status: e.target.value })} value={data.status} style={{ display: \"flex\", gap: \"20px\", alignItems: \"center\" }} >\r\n                                    <Radio value=\"Approved\">Approved</Radio>\r\n                                    <Radio value=\"Requested\">Requested</Radio>\r\n                                    <Radio value=\"Rejected\">Rejected</Radio>\r\n                                </Radio.Group>\r\n\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Divider orientation=\"left\">Leave Date</Divider>\r\n                                <DatePicker.RangePicker\r\n                                    style={{ width: '100%' }}\r\n                                    value={[moment(data.startDate), moment(data.endDate)]}\r\n                                    onChange={v => handleChange({ startDate: new Date(v[0]), endDate: new Date(v[1]) })} allowClear\r\n                                />\r\n\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/lab-instrument/details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/lab-instrument/list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/lab-instrument/save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/lab-instrument/delete', { ids: id });\r\n    }\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/master';\r\nimport util from '../../../utils/util';\r\n\r\n\r\nexport default function LabInstrument({ parentId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Button',\r\n            dataIndex: 'button',\r\n            width: 100,\r\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\r\n\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unique Id',\r\n            dataIndex: 'uniqueId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({slug: util.removeSpecialChars(data.name || \"\")});\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Unique Id\" required>\r\n                                    <Input placeholder=\"Unique Id\" value={data.uniqueId} onChange={e => { handleChange({ uniqueId: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e.target.value }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                // onOk={save}\r\n                // okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            // footer={[\r\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n            // ]}\r\n            >\r\n                <LabInstrument parentId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/gas/details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/gas/list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/gas/save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/gas/delete', { ids: id });\r\n    }\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/gas';\r\nimport util from '../../../utils/util';\r\n\r\n\r\nexport default function Gases({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Button',\r\n            dataIndex: 'button',\r\n            width: 100,\r\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\r\n\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unique Id',\r\n            dataIndex: 'uniqueId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({slug: util.removeSpecialChars(data.name || \"\")});\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Unique Id\" required>\r\n                                    <Input placeholder=\"Unique Id\" value={data.uniqueId} onChange={e => { handleChange({ uniqueId: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e.target.value }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                // onOk={save}\r\n                // okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            // footer={[\r\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n            // ]}\r\n            >\r\n                <Gases parentId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/labware/details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/labware/list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/labware/save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/labware/delete', { ids: id });\r\n    }\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/labware';\r\nimport util from '../../../utils/util';\r\n\r\n\r\nexport default function LabWare({ parentId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Button',\r\n            dataIndex: 'button',\r\n            width: 100,\r\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\r\n\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unique Id',\r\n            dataIndex: 'uniqueId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({slug: util.removeSpecialChars(data.name || \"\")});\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Unique Id\" required>\r\n                                    <Input placeholder=\"Unique Id\" value={data.uniqueId} onChange={e => { handleChange({ uniqueId: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e.target.value }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                // onOk={save}\r\n                // okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            // footer={[\r\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n            // ]}\r\n            >\r\n                <LabWare parentId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master/';\r\n\r\n\r\n\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + \"brand/list\");\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"brand/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + 'brand/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + 'brand/details/' + id);\r\n    }\r\n\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/brand';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n\r\n\r\n\r\nexport default function Brand() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        // service.list().then((res)=>{\r\n        //     console.log(res)\r\n        // })\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        console.log('data', data);\r\n    }, [data]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e.target.value }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master/';\r\n\r\n\r\n\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + \"chemical/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"chemical/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + 'chemical/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + 'chemical/details/' + id);\r\n    }\r\n\r\n\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/chemicals';\r\nimport util from '../../../utils/util';\r\n\r\n\r\n\r\nexport default function Chemicals({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addSubNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Lable',\r\n            dataIndex: 'lable',\r\n            width: 100,\r\n            render: (v, row) => {\r\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\r\n            }\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !parentId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <NewForm ref={addSubNewModalRef} ></NewForm>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e.target.value }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst NewForm = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={<>Data of &nbsp;<span style={{ color: 'red' }}>{data.name}</span></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n                footer={null}\r\n            >\r\n                <Chemicals parentId={data._id}></Chemicals>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'master/';\r\n\r\n\r\n\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + \"life-science/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"life-science/save\", data, { params: query });\r\n    }\r\n\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + 'life-science/delete', { ids: id });\r\n    }\r\n\r\n    static details(id) {\r\n        return axios.get(this.baseURL + 'life-science/details/' + id);\r\n    }\r\n\r\n\r\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/lifescience';\r\nimport util from '../../../utils/util';\r\n\r\n\r\n\r\nexport default function Lifescience({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\r\n    const addNewModalRef = useRef();\r\n    const addSubNewModalRef = useRef();\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Lable',\r\n            dataIndex: 'lable',\r\n            width: 100,\r\n            render: (v, row) => {\r\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\r\n            }\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !parentId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <NewForm ref={addSubNewModalRef} ></NewForm>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e.target.value }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst NewForm = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={<>Data of &nbsp;<span style={{ color: 'red' }}>{data.name}</span></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n                footer={null}\r\n            >\r\n                <Lifescience parentId={data._id}></Lifescience>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n","import { DashboardOutlined, BankOutlined, ApartmentOutlined, CalendarOutlined } from '@ant-design/icons';\r\n\r\nimport Dashboard from '../pages/Dashboard';\r\nimport Setting from \"../pages/Setting\"\r\nimport Service from '../pages/Service';\r\nimport WorkerManagement from '../pages/management/workerManagement';\r\nimport UserManagement from '../pages/management/userManagement';\r\nimport JobList from '../pages/JobList';\r\nimport WorkHistory from '../pages/WorkHistory';\r\nimport Leave from '../pages/Leave';\r\nimport Profile from '../pages/admin/Profile';\r\nimport ChangePassword from '../pages/admin/Change-password';\r\nimport LabInstrument from '../pages/master/LabInstrument';\r\nimport Gases from '../pages/master/Gases';\r\nimport LabWare from '../pages/master/labWare';\r\nimport Brand from '../pages/master/Brand';\r\nimport Chemicles from '../pages/master/Chemicals';\r\nimport LifeScience from '../pages/master/LifeScience';\r\n\r\nconst routes = [\r\n    { title: 'Dashboard', icon: DashboardOutlined, url: '/', component: Dashboard },\r\n    { title: 'Service', icon: ApartmentOutlined, url: '/service', component: Service },\r\n    { title: 'Job List', icon: ApartmentOutlined, url: '/job-list', component: JobList },\r\n    {\r\n        title: 'Master', icon: BankOutlined, url: '/master-new', children: [\r\n            { title: 'Brand', icon: ApartmentOutlined, url: '/', component: Brand },\r\n            { title: 'Chemicals', icon: ApartmentOutlined, url: '/chemicals', component: Chemicles },\r\n            { title: 'Life-Science', icon: ApartmentOutlined, url: '/lifescience', component: LifeScience },\r\n            { title: 'Lab Instrument', icon: ApartmentOutlined, url: '/', component: LabInstrument },\r\n            { title: 'Lab Ware', icon: ApartmentOutlined, url: '/lab-ware', component: LabWare },\r\n            { title: 'Gases', icon: ApartmentOutlined, url: '/gases', component: Gases },\r\n        ]\r\n    },\r\n\r\n    {\r\n        title: 'Management', icon: BankOutlined, url: '/management', children: [\r\n            { title: 'User', icon: ApartmentOutlined, url: '/', component: UserManagement },\r\n            { title: 'Worker', icon: ApartmentOutlined, url: '/Worker', component: WorkerManagement },\r\n        ]\r\n    },\r\n    { title: 'Working History', icon: CalendarOutlined, url: '/work-history', component: WorkHistory },\r\n    { title: 'Leave Requests', icon: CalendarOutlined, url: '/leave', component: Leave },\r\n    { title: 'Settings', icon: CalendarOutlined, url: '/Setting', component: Setting },\r\n    {\r\n        title: 'You', icon: ApartmentOutlined, url: '/profile', children: [\r\n            { title: 'Profile', icon: ApartmentOutlined, url: '/', component: Profile },\r\n            { title: 'Change Password', icon: ApartmentOutlined, url: '/change-password', component: ChangePassword },\r\n        ]\r\n    },\r\n].filter(v => (!v.hidden) || v.children?.length);\r\n\r\nexport default routes;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Form, Spin, Row, Col , Typography, Divider, Switch } from 'antd';\r\nimport { PageHeader } from '@ant-design/pro-layout'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport greetingTime from 'greeting-time';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport service from '../../../services/admin';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport UploadImage from '../../../utils/UploadImage';\r\n\r\nexport default function Profile() {\r\n\r\n    const [data, setData] = useState({});\r\n    const [fileList, setFileList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [doSave, setDoSave] = useState(false);\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.profile().then(res => {\r\n            setData(res.data.result || {});\r\n            if (res.data.result?.avatar) {\r\n                setFileList([res.data.result?.avatar]);\r\n            }\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateProfile();\r\n    }, [data]);\r\n\r\n    function updateProfile() {\r\n        if (doSave) {\r\n            setLoading(true);\r\n            service.saveProfile(data).then(res => {\r\n                AntdMsg(res.message);\r\n            }).catch(err => {\r\n                AntdMsg(err.message, 'error');\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleChange(fileList?.[0], 'avatar');\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <PageHeader \r\n                    title={greetingTime(new Date()) + ', ' + data?.name}\r\n                    extra={[<Switch key={'do-save'} checkedChildren=\"Update\" unCheckedChildren=\"Update\" checked={doSave} onChange={v => { setDoSave(v) }} />]}\r\n                />\r\n                <Divider />\r\n                <Form layout=\"vertical\">\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={16}>\r\n                            <Row gutter={[12, 10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'name'); } }} level={5} >\r\n                                            {data.name}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">User Name</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'userName'); } }} level={5} >\r\n                                            {data.userName}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Email</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'email'); } }} level={5} >\r\n                                            {data.email}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Phone Number</Typography.Text>}>\r\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'phone'); } }} level={5} >\r\n                                            {data.phone}\r\n                                        </Typography.Title>\r\n                                        <Divider style={{ margin: 0 }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <UploadImage {...{ fileList, setFileList }} disabled={!doSave} cropImage />\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Spin>\r\n        </>\r\n    );\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Form, Spin, Row, Col, Divider, Input, Button } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport greetingTime from 'greeting-time';\r\nimport { PageHeader } from '@ant-design/pro-layout'\r\n\r\nimport React, { useState } from 'react';\r\nimport service from '../../../services/admin';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport commonObj from '../../../commonObj';\r\n\r\nexport default function ChangePassword() {\r\n\r\n    const [data, setData] = useState({name: commonObj.name});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\r\n\r\n    function save() {\r\n        setLoading(true);\r\n        service.updatePassword(data).then(res => {\r\n            AntdMsg(res.message);\r\n            setData({});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <PageHeader title={greetingTime(new Date()) + ', ' + data?.name} />\r\n                <Divider />\r\n                <Form layout=\"vertical\">\r\n                    <Row gutter={[12, 2]}>\r\n                        <Col span={8}>\r\n                            <Form.Item label=\"Current Password\">\r\n                                <Input.Password placeholder=\"Current Password\" value={data.currentPassword} onChange={e => { handleChange(e.target.value, 'currentPassword'); }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}></Col>\r\n\r\n                        <Col span={8}>\r\n                            <Form.Item label=\"New Password\">\r\n                                <Input.Password placeholder=\"New Password\" value={data.newPassword} onChange={e => { handleChange(e.target.value, 'newPassword'); }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}></Col>\r\n                        <Col span={8}>\r\n                            <Form.Item label=\"Confirm New Password\">\r\n                                <Input.Password placeholder=\"Confirm New Password\" value={data.confirmNewPassword} onChange={e => { handleChange(e.target.value, 'confirmNewPassword'); }} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}></Col>\r\n                        <Col span={8}>\r\n                            <Form.Item>\r\n                                {\r\n                                    data.currentPassword && data.newPassword && data.confirmNewPassword\r\n                                        ? <Button type=\"primary\" style={{ width: '100%' }} htmlType=\"submit\" onClick={save} >Update Password</Button>\r\n                                        : null\r\n                                }\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Spin>\r\n        </>\r\n    );\r\n};","import { Menu } from 'antd';\r\nimport React from 'react';\r\nimport routes from './route';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { LogoutOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst items = [...routes];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach((v, i) => {\r\n        if (v.children?.length) {\r\n            arr[i] = {\r\n                ...arr[i],\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            arr[i] = {\r\n                ...v,\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle(items);\r\n\r\nitems.push(\r\n    {\r\n        label: 'Logout',\r\n        icon: <LogoutOutlined />,\r\n        key: 'logout',\r\n        style: { color: 'red' },\r\n        onClick: () => { window.localStorage.clear(); window.location.reload(); },\r\n        component: <></>\r\n    }\r\n);\r\n\r\nconst App = () => {\r\n    const paths = [];\r\n    useLocation().pathname.split('/')?.reduce((prev, cur) => {\r\n        paths.push(prev + '/' + cur);\r\n        return prev + '/' + cur;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <Menu\r\n                    defaultSelectedKeys={[paths.pop()]}\r\n                    defaultOpenKeys={[...paths]}\r\n                    mode=\"horizontal\"\r\n                    theme=\"dark\"\r\n                    items={items}\r\n                // style={{ height: '100vh' }}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Card, Layout } from \"antd\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Menu from \"./Menu\";\r\nimport routes from \"./route\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\n\r\n\r\nconst newRoutes = [];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach(v => {\r\n        if (v.children) {\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            newRoutes.push({ ...v, url: prevBaseUrl + v.url })\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle([...routes]);\r\n\r\n\r\nexport default function MyLayout() {\r\n    const [collapsed, setCollapsed] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                {/* <Layout.Sider\r\n                    width={250}\r\n                    collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}\r\n                    style={{\r\n                        overflow: 'auto',\r\n                        height: '100vh',\r\n                        position: 'fixed',\r\n                        left: 0,\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        maxWidth: '300px!important',\r\n                        width: '300px!important'\r\n                    }}\r\n                >\r\n                    <div className=\"logo\" />\r\n                    <Menu />\r\n                </Layout.Sider>routes */}\r\n                <Layout className=\"site-layout\">\r\n                    {/* <Top /> */}\r\n                    <Menu />\r\n\r\n\r\n                    <Layout.Content\r\n                        style={{\r\n                            margin: '24px 40px 0 40px',\r\n                            // overflow: 'initial',\r\n                            // marginLeft: !collapsed ? '230px' : '60px'\r\n                        }}\r\n                    >\r\n                        {/* <Breadcrumb /> */}\r\n                        <Card bordered>\r\n                            <Routes>\r\n                                {newRoutes.filter(v => v.key !== 'logout').map((v) => <Route path={v.url} key={v.url} element={<v.component />} />)}\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["style","textAlign","service","data","axios","this","baseURL","params","query","id","ids","TinyMce","props","height","menubar","plugins","toolbar","content_style","initialValue","onChange","editorRef","useRef","onInit","evt","editor","current","init","file_browser_callback_types","file_picker_callback","cb","value","meta","input","document","createElement","setAttribute","onchange","file","files","reader","FileReader","readAsDataURL","onload","result","title","name","click","deprecation_warnings","onSelectionChange","getContent","Aboutus","handleChange","layout","gutter","span","label","required","v","TandC","FAQ","Contactus","width","padding","type","placeholder","email","e","target","number","address","PrivacyPolicy","url","config","UploadImage","fileList","setFileList","count","cropImage","disabled","listType","uploadImage","options","onSuccess","onError","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","total","append","fileService","then","res","uid","err","handleOnChange","fl","handleRemove","aspect","shape","quality","rotate","accept","customRequest","onRemove","className","length","MyPagination","qData","setQData","showTotal","start","page","limit","end","pageSize","pp","showSizeChanger","commonObj","includes","Search","addNewModalRef","selected","deleteData","list","onSubmitCapture","marginBottom","key","allowClear","htmlType","float","icon","onClick","openForm","onConfirm","okText","cancelText","danger","AddForm","forwardRef","ref","useState","open","setOpen","setData","ajxRequesting","setAjxRequesting","Object","entries","forEach","ent","varDt","k","keys","split","i","parseInt","useImperativeHandle","dt","_id","fileType","save","Services","AntdMsg","message","catch","finally","useEffect","top","onOk","okButtonProps","onCancel","destroyOnClose","maskClosable","footer","spinning","indicator","fontSize","spin","per_hr_rate","WorkHistory","workerId","loading","setLoading","setSelected","WorkHistoryService","map","extra","tableColumns","dataIndex","render","receiverName","phone","moment","format","color","status","filter","item","hidden","ellipsis","fixed","tableProps","bordered","size","showHeader","rowSelection","selectedRowKeys","tableLayout","undefined","level","marginTop","pagination","position","columns","dataSource","scroll","y","x","accountService","aadharImg","setAadharImg","nocImg","setNocImg","WorkerService","avatar","aadharImage","nocImage","userName","mode","serviceIds","presentAddress","permanentAddress","ModelModal","AccountModal","modalData","setModalData","detail","bankName","holderName","accountNumber","IFSC","accountType","Address","parentId","addSubNewModalRef","row","isActive","EditOutlined","console","log","slug","util","UserService","userId","workers","userNames","setUserNames","Names","margin","searchKey","showSearch","optionFilterProp","filterOption","option","toLowerCase","orientation","display","gap","alignItems","startDate","endDate","Date","LabInstrument","addNewLabelRef","AddLabel","Gases","LabWare","Chemicals","NewForm","Lifescience","DashboardOutlined","component","Dashboard","ApartmentOutlined","src","JobList","BankOutlined","children","reverse","Chemicles","LifeScience","ModelModalRef","accountModalRef","setService","Service","CalendarOutlined","worker","setWorker","_","workerService","isAll","currentTab","setCurrentTab","changeForm","getDetails","activeKey","items","borderTop","flexDirection","paddingTop","paddingRight","doSave","setDoSave","PageHeader","greetingTime","checkedChildren","unCheckedChildren","checked","strong","editable","editing","triggerType","currentPassword","newPassword","confirmNewPassword","routes","convertMultiToSingle","arr","prevBaseUrl","to","push","LogoutOutlined","window","localStorage","clear","location","reload","paths","useLocation","pathname","reduce","prev","cur","defaultSelectedKeys","pop","defaultOpenKeys","theme","Error404","subTitle","newRoutes","MyLayout","minHeight","Menu","path","element"],"sourceRoot":""}